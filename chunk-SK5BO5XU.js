import{a as C}from"./chunk-KWBPUP6A.js";import{b as E}from"./chunk-TBA3OZMJ.js";import{a as b}from"./chunk-P25RU3X5.js";import{f as L}from"./chunk-FENRIY2T.js";import{a as x}from"./chunk-GJASVPF6.js";import{a as O}from"./chunk-4XZ6X7MQ.js";import{E as N}from"./chunk-ETE32IYO.js";import{S}from"./chunk-ONUGDWDK.js";import{H as f}from"./chunk-QHVIRF5H.js";import{I as m}from"./chunk-WZDN6K3C.js";import{a as h}from"./chunk-QGVBCWUY.js";import{J as R,P as w}from"./chunk-CKJ56T2Q.js";import{r as a,t as c}from"./chunk-UHRSAPGQ.js";import{a as _}from"./chunk-N2WTMF3X.js";var k=class extends x.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};h([f({readOnly:!0})],k.prototype,"connectionError",null),k=h([m("esri.layers.support.StreamConnection")],k);var v=k;var p;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(p||(p={}));var g=class extends v{constructor(e){super({}),this._outstandingMessages=[],this.errorString=null;let{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._config=e,this._featureZScaler=b(t,o,r),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case p.CONNECTING:case p.OPEN:return"connected";case p.CLOSING:case p.CLOSED:return"disconnected"}}sendMessageToSocket(e){this._websocket!=null?this._websocket.send(JSON.stringify(e)):this._outstandingMessages.push(e)}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;let o=S(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(o),this.notifyChange("connectionStatus")}catch(o){let s=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(a.getLogger(this).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${s}s`,o)),await R(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=t=>{try{let r=JSON.parse(t.data);this._onMessage(r)}catch(r){return void a.getLogger(this).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:r}))}}}_createWebSocket(e){return new Promise((t,r)=>{let o=new WebSocket(e);o.onopen=()=>{if(o.onopen=null,this.destroyed)return o.onclose=null,void o.close();o.onclose=s=>this._onClose(s),o.onerror=s=>this._onError(s),this._setWebSocketJSONParseHandler(o),t(o)},o.onclose=s=>{o.onopen=o.onclose=null,r(s)}})}async _handshake(e=1e4){let t=this._websocket;if(t==null)return;let r=w(),o=t.onmessage,{filter:s,outFields:n,spatialReference:u}=this._config;return r.timeout(e),t.onmessage=d=>{let l=null;try{l=JSON.parse(d.data)}catch{}l&&typeof l=="object"||(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",d.data)),r.reject(),this.destroy()),l.spatialReference?.wkid!==u?.wkid&&(a.getLogger(this).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${u.wkid}`,d.data)),r.reject(),this.destroy()),l.format!=="json"&&(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",d.data)),r.reject(),this.destroy()),s&&l.filter!==s&&a.getLogger(this).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),n&&l.outFields!==n&&a.getLogger(this).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=o;for(let i of this._outstandingMessages)t.send(JSON.stringify(i));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:s,outFields:n,format:"json",spatialReference:{wkid:u.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(let t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){let t="Encountered an error over WebSocket connection";this._set("errorString",t),a.getLogger(this).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),e.code!==1e3&&a.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};h([f()],g.prototype,"connectionStatus",null),h([f()],g.prototype,"errorString",void 0),g=h([m("esri.layers.graphics.sources.connections.WebSocketConnection")],g);var M=1e4,q={maxQueryDepth:5,maxRecordCountFactor:3},F=class extends g{constructor(e){super(_(_({},q),e)),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){let e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");let t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);let{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){let t=_({f:"json"},this._config.customParameters),r=N(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){let r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return S(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(let t of e)if(t.includes("wss"))return t;return a.getLogger(this).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){let r=this._websocket;if(r==null||e==null&&t==null)return;let o=JSON.stringify({filter:this._serializeFilter(e,t)}),s=!1,n=w(),u=()=>{s||(this.destroyed||this._websocket!==r||a.getLogger(this).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},d=l=>{let i=JSON.parse(l.data);i.filter&&(i.error&&(a.getLogger(this).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),s=!0,n.resolve())};return r.onmessage=d,r.send(o),setTimeout(u,M),n.promise}_serializeFilter(e,t){let r={};if(e==null&&t==null)return r;if(e?.geometry)try{let o=L(e.geometry);if(o.type!=="extent")throw new c(`Expected extent but found type ${o.type}`);r.geometry=JSON.stringify(o.shiftCentralMeridian())}catch(o){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return e?.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;let t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],o=this._relatedFeatures.get(r);if(!o)return a.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;let{attributes:s,geometry:n}=o;for(let u in s)e.attributes[u]=s[u];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{let{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;let s=await o;if(!s)return;for(let n of s.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;let t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){let t=new(await import("./chunk-KD7CC3OV.js")).default({url:e}),{capabilities:r}=await t.load(),o=r.query.supportsMaxRecordCountFactor,s=r.query.supportsPagination,n=r.query.supportsCentroid,u=this._config.maxRecordCountFactor,d=t.capabilities.query.maxRecordCount,l=o?d*u:d,i=new E;if(i.outFields=this._config.outFields??["*"],i.where=this._config.filter?.where??"1=1",i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=O.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),o&&(i.maxRecordCountFactor=u),s)return i.num=l,t.destroy(),this._queryPages(e,i);let P=await C(e,i,this._config.sourceSpatialReference);return t.destroy(),P.data}async _queryPages(e,t,r=[],o=0){t.start=t.num!=null?o*t.num:null;let{data:s}=await C(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<(this._config.maxQueryDepth??0)?(s.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,o+1)):(r.forEach(n=>s.features.push(n)),s)}_addRelatedFeatures(e){let t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(let s of r){let n=s.attributes[o];t.set(n,s)}this._relatedFeatures=t}};F=h([m("esri.layers.graphics.sources.connections.GeoEventConnection")],F);var W=F;var y=class extends v{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;let{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._featureZScaler=b(t,o,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(let t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};h([f()],y.prototype,"connectionStatus",void 0),h([f()],y.prototype,"errorString",void 0),y=h([m("esri.layers.support.ClientSideConnection")],y);function T(e,t){if(e==null&&t==null)return null;let r={};return t!=null&&(r.geometry=t),e!=null&&(r.where=e),r}function Te(e,t,r,o,s,n,u,d,l){let i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:T(s,n),maxReconnectionAttempts:u,maxReconnectionInterval:d,customParameters:l};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new g(i):new W(i):new y(i)}export{Te as a};
