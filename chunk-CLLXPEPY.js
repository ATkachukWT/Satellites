import{a as jt,b as si,c as ai,d as ni}from"./chunk-GN27G772.js";import{a as D,b as $,c as Cr,d as Qr,e as Kr,f as Zr,g as Xr,k as Yr,l as ei,m as ti,n as ri,o as ii,p as oi}from"./chunk-53QT4ZXE.js";import{a as jr,e as mt,f as kr,h as $r,j as Wr}from"./chunk-Y4TT5CQV.js";import{a as Mr,b as Vr,c as ce,d as Ar,e as Jr,f as Er,g as qr,h as Gr,i as Lr,j as Ur,k as zr,l as Hr,m as Br}from"./chunk-4PDI5FRK.js";import{a as Nt}from"./chunk-JZL5IG67.js";import{C as br,F as _t,H as Pt,I as Sr,Q as xr,_ as Fr,k as wr,l as Ot,m as te,n as Pe,o as ue,p as vr,q as pt}from"./chunk-IPR4SOKY.js";import{G as Ir,O as Tr,b as Rr,h as lt}from"./chunk-VKKXXOQY.js";import{a as fr,b as hr}from"./chunk-VEVXUPES.js";import"./chunk-6FDNNAVT.js";import"./chunk-VU5W7W6Y.js";import"./chunk-JAENS3D3.js";import"./chunk-3ATD3H4Q.js";import{a as gr}from"./chunk-CUJN6GMF.js";import{a as Ze}from"./chunk-WDTJILD4.js";import"./chunk-NNX76JDG.js";import"./chunk-76O2P2CB.js";import{a as dr}from"./chunk-7LUXMWRM.js";import{a as lr}from"./chunk-WKYBGWI5.js";import{b as cr}from"./chunk-4Y623NMU.js";import"./chunk-PTAJ247D.js";import{a as yr}from"./chunk-O4MHA7YC.js";import"./chunk-XHEYQWRE.js";import{a as pr}from"./chunk-R5HXEPJ3.js";import{b as Yt}from"./chunk-CJM4TC3F.js";import{c as Xt}from"./chunk-J5PZXDWN.js";import"./chunk-ME2B26KJ.js";import"./chunk-U7PX7SHO.js";import{a as er}from"./chunk-DZBH24YT.js";import{a as Pr}from"./chunk-7E723FQO.js";import{c as Dr,e as Nr,f as Or,i as _r}from"./chunk-SVJ5AK5B.js";import"./chunk-FXCL7YYQ.js";import"./chunk-BGOXHRAZ.js";import{f as mr}from"./chunk-SXNHGK6A.js";import"./chunk-TMZQBNSB.js";import"./chunk-PFSX77NO.js";import"./chunk-ZJWWZWMH.js";import"./chunk-W45QYQK6.js";import"./chunk-I5V562B6.js";import{a as ur}from"./chunk-WT3XCHGP.js";import{a as Zt}from"./chunk-CUJB6F5L.js";import{a as li}from"./chunk-5NHJFBCW.js";import{a as nt}from"./chunk-WPZN772I.js";import"./chunk-K27EVVBH.js";import"./chunk-JGU5JAYW.js";import"./chunk-LCMPSAU3.js";import"./chunk-CRJDOM7J.js";import"./chunk-BCFGKQ2N.js";import"./chunk-YQGS4EZO.js";import{a as nr}from"./chunk-3REMXE4W.js";import{p as ar}from"./chunk-4ABKPPKG.js";import"./chunk-PMVQ5DJK.js";import"./chunk-I4Q2S2XA.js";import"./chunk-V774RJYN.js";import"./chunk-L2WNUKLP.js";import"./chunk-XITT4JU2.js";import"./chunk-ZBX6HJOS.js";import"./chunk-BSMAMABT.js";import"./chunk-LYNAYPL3.js";import"./chunk-ULANM5YP.js";import"./chunk-77L5NP7A.js";import"./chunk-2G3SBK6Q.js";import"./chunk-VOB6IBIW.js";import"./chunk-63B3IOWG.js";import"./chunk-KAMRW6HF.js";import"./chunk-KWBPUP6A.js";import"./chunk-LAVV77UH.js";import"./chunk-VTGWQ7AP.js";import{b as at}from"./chunk-TBA3OZMJ.js";import{a as sr}from"./chunk-S4QV2MGO.js";import"./chunk-IRI7XXYY.js";import"./chunk-DDZ3KR2Q.js";import{a as qe}from"./chunk-USMAJP2P.js";import"./chunk-PHNFWHVF.js";import"./chunk-4N5OXIEM.js";import"./chunk-RROJCQBD.js";import"./chunk-3CDCI3XM.js";import{e as rr}from"./chunk-W26XKMAT.js";import{c as V}from"./chunk-NQWYPF77.js";import"./chunk-6KRFVLII.js";import{a as or}from"./chunk-CDP4MSRO.js";import{b as Se}from"./chunk-TOH4K6HW.js";import"./chunk-UP6FLASM.js";import"./chunk-DGBDFGKO.js";import{a as B,b as z,c as Q}from"./chunk-44S2QQS2.js";import{a as k}from"./chunk-JTDXB5TK.js";import"./chunk-7QY3BMVN.js";import"./chunk-XEZTJAR4.js";import"./chunk-BUP3AMMF.js";import"./chunk-XCIPBOI4.js";import"./chunk-CWUY5SXW.js";import"./chunk-KD27XIJC.js";import"./chunk-TPFJWNIU.js";import"./chunk-P25RU3X5.js";import"./chunk-XRRQM4E2.js";import"./chunk-GWBRHLNH.js";import"./chunk-NHEQ4TAR.js";import"./chunk-RZF6KTKU.js";import"./chunk-HP4LYRR4.js";import"./chunk-AFC2H4Q3.js";import"./chunk-OLOKUDVI.js";import"./chunk-4G7UTTZJ.js";import"./chunk-ZTOZWLEE.js";import"./chunk-RJWOVI3M.js";import{a as tr}from"./chunk-NRBJLISB.js";import"./chunk-PTZYZULI.js";import"./chunk-NMLYCCKN.js";import"./chunk-RSDQHAJX.js";import"./chunk-BOVYXYHK.js";import{f as U,g as A}from"./chunk-FENRIY2T.js";import"./chunk-5HJY3X5Y.js";import"./chunk-6RZAM42M.js";import"./chunk-HX2VGIR2.js";import"./chunk-64QN2VGD.js";import{a as ir}from"./chunk-JGEVVXD4.js";import{p as Ke}from"./chunk-B3FO6PT7.js";import"./chunk-C4UMJHQC.js";import"./chunk-BCREO4Q5.js";import"./chunk-LXFQWIWE.js";import"./chunk-QT6UNBJP.js";import"./chunk-V2GNNIXD.js";import"./chunk-NSYL2RQJ.js";import{a as Kt}from"./chunk-MWSXMSWY.js";import"./chunk-JRCKELO6.js";import"./chunk-ZVCMULXF.js";import"./chunk-KJULKTB5.js";import"./chunk-LACL4BQ2.js";import"./chunk-YR2HD3ZC.js";import"./chunk-GJASVPF6.js";import"./chunk-UBFCO3DV.js";import"./chunk-NI7FJV5X.js";import"./chunk-XZIOXVVJ.js";import"./chunk-5RAXVJQI.js";import"./chunk-EXJYW3PC.js";import"./chunk-SXQPBCOX.js";import{m as be}from"./chunk-LFH24RLM.js";import{n as I}from"./chunk-Z5Q7KLA4.js";import{a as H}from"./chunk-X4LNX4BR.js";import{a as W}from"./chunk-4XZ6X7MQ.js";import{a as b}from"./chunk-WLHY3MMA.js";import{o as We,qa as Je,ra as ee,sa as Ee}from"./chunk-KGVXGH6H.js";import"./chunk-ARRCN5K3.js";import"./chunk-LXQPIAN7.js";import"./chunk-FTDD7QBB.js";import"./chunk-DB3UIQCU.js";import{a as st}from"./chunk-SBHKMV3P.js";import"./chunk-R4A63S45.js";import{E as N}from"./chunk-ETE32IYO.js";import{h as Wt}from"./chunk-ONUGDWDK.js";import{f as h}from"./chunk-SG7CQU4O.js";import{H as s}from"./chunk-QHVIRF5H.js";import{I as c,l as kt,n as $t,o as q,x as me}from"./chunk-WZDN6K3C.js";import{a as i}from"./chunk-QGVBCWUY.js";import"./chunk-OJQ73TPF.js";import"./chunk-354SCPDU.js";import"./chunk-OVHPPCBL.js";import"./chunk-IYZFKXJ6.js";import{O as Qt,y as Bt}from"./chunk-CKJ56T2Q.js";import"./chunk-SNFOAZZQ.js";import"./chunk-F6JAWRPN.js";import{b as P,r as Dt,t as T}from"./chunk-UHRSAPGQ.js";import"./chunk-V76GWARL.js";import{a as f,b as x}from"./chunk-N2WTMF3X.js";var pi={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var bo=new Set(["u1","u2","u4","u8","s8","u16","s16"]),So={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},xo=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function ct(o){return xo.has(o.type)}function dt(o,t){if(!o||!t)return P(o||t);let n=P(o);if(n.functionDefinition&&t.rasterFunctionDefinition){let e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),ui(n.functionDefinition.arguments,t),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else t.functionName?.toLowerCase()!=="none"&&(di(n.functionArguments).Raster=t);return n}function ui(o,t){for(let n in o)n.toLowerCase()==="raster"&&(o[n].type==="RasterFunctionVariable"?(o[n]=t.rasterFunctionDefinition,o[n].type="RasterFunctionTemplate"):o[n].type==="RasterFunctionTemplate"&&ui(o[n].arguments,t))}function re(o){let t=P(pi[o.functionName+"Function"]),n=o.functionArguments;for(let e in n)e.toLowerCase()==="raster"?(t.arguments[e]=re(n[e]),t.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(t.arguments[e].value=_o(n[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=n[e];return t}function ci(o,t){switch(t=t||{},o.type){case"raster-stretch":return To(o,t);case"class-breaks":return Do(o,t);case"unique-value":return No(o,t);case"raster-colormap":return Oo(o,t);case"vector-field":return Io(o,t);case"raster-shaded-relief":return Fo(o,t);case"flow":throw new Error("Unsupported rendering rule.")}}function di(o){let t=o?.Raster??o?.raster;return t&&t.declaredClass==="esri.layers.support.RasterFunction"?di(t.functionArguments):o}var Xe={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Io(o,t){let n=new D;n.functionName="VectorFieldRenderer";let{dataType:e,bandNames:r}=t,a=e==="vector-uv",l,p;if(r&&r.length===2){let w=r.map(S=>S.toLowerCase());l=w.indexOf("magnitude"),p=w.indexOf("direction")}l!==-1&&l!==null||(l=0,p=1);let m=o.rotationType==="arithmetic"?1:2,d=o.flowRepresentation==="flow-from"?0:1,u=o.visualVariables?o.visualVariables.find(w=>w.field==="Magnitude"):new mr,y={magnitudeBandID:l,directionBandID:p,isUVComponents:a,referenceSystem:m,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:So[o.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};n.functionArguments=y;let R=re(n);return t.convertToRFT?D.fromJSON({rasterFunctionDefinition:R}):n}function Fo(o,t){let n=t.convertToRFT;if(t.dataType!=="elevation"&&(t.dataType!=="generic"||t.bandCount!==1||t.pixelType!=="s16"&&t.pixelType!=="s32"&&t.pixelType!=="f32"&&t.pixelType!=="f64"))return new D;let e=new D;e.functionName="Hillshade";let r=o.hillshadeType==="traditional"?0:1,a=o.scalingType==="none"?1:3,l={HillshadeType:r,SlopeType:a,ZFactor:o.zFactor};return r===0&&(l.Azimuth=o.azimuth,l.Altitude=o.altitude),a===3&&(l.PSPower=o.pixelSizePower,l.PSZFactor=o.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",o.colorRamp&&(e.functionName="ShadedRelief",n?l.ColorRamp=Pt(o.colorRamp):l.Colormap=_t(o.colorRamp)),n?new D({rasterFunctionDefinition:re(e)}):e}function To(o,t){let n=t.convertToRFT,e=new D;e.functionName="Stretch";let r=Xe[xr.toJSON(o.stretchType)],a="u8",l=o.customStatistics?.map(m=>[m.min,m.max,m.avg??0,m.stddev??1]),p={StretchType:r,Statistics:l,DRA:o.dynamicRangeAdjustment,UseGamma:o.useGamma,Gamma:o.gamma,ComputeGamma:o.computeGamma};if(o.outputMin!=null&&(p.Min=o.outputMin),o.outputMax!=null&&(p.Max=o.outputMax),r===Xe.standardDeviation?(p.NumberOfStandardDeviations=o.numberOfStandardDeviations,e.outputPixelType=a):r===Xe.percentClip?(p.MinPercent=o.minPercent,p.MaxPercent=o.maxPercent,e.outputPixelType=a):r===Xe.minMax?e.outputPixelType=a:r===Xe.sigmoid&&(p.SigmoidStrengthLevel=o.sigmoidStrengthLevel),e.functionArguments=p,e.variableName="Raster",o.colorRamp){let m=o.colorRamp,d=new D;if(n)d.functionArguments={ColorRamp:Pt(m)};else{let u=br(m,!0);if(u)d.functionArguments={colorRampName:u};else if(!t.convertColorRampToColormap||m.type!=="algorithmic"&&m.type!=="multipart"){let y=o.colorRamp.toJSON();y.type==="algorithmic"?y.algorithm=y.algorithm||"esriCIELabAlgorithm":y.type==="multipart"&&y.colorRamps?.length&&y.colorRamps.forEach(R=>R.algorithm=R.algorithm||"esriCIELabAlgorithm"),d.functionArguments={colorRamp:y}}else d.functionArguments={Colormap:_t(m)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=e,n?new D({rasterFunctionDefinition:re(d)}):d}return n?new D({rasterFunctionDefinition:re(e)}):e}function Do(o,t){let n=[],e=[],r=[],a=[],{pixelType:p,rasterAttributeTable:m}=t,d=m==null?null:m.features,u=yi(m);if(u&&d&&Array.isArray(d)&&o.classBreakInfos){o.classBreakInfos.forEach((v,F)=>{let j=v.symbol?.color,M;j?.a&&v.minValue!=null&&v.maxValue!=null&&d.forEach(J=>{v.minValue!=null&&v.maxValue!=null&&(M=J.attributes[o.field],(M>=v.minValue&&M<v.maxValue||F===o.classBreakInfos.length-1&&M>=v.minValue)&&a.push([J.attributes[u],j.r,j.g,j.b]))})});let S=p?ut(a,p):a,g=new D;return g.functionName="Colormap",g.functionArguments={},g.functionArguments.Colormap=S,g.variableName="Raster",t.convertToRFT?new D({rasterFunctionDefinition:re(g)}):g}o.classBreakInfos.forEach((S,g)=>{if(S.minValue==null||S.maxValue==null)return;let v=S.symbol&&S.symbol.color;v?.a?(g===0?n.push(S.minValue,S.maxValue+1e-4):n.push(S.minValue+1e-4,S.maxValue+1e-4),e.push(g),a.push([g,v.r,v.g,v.b])):r.push(S.minValue,S.maxValue)});let y=p?ut(a,p):a,R=new D;R.functionName="Remap",R.functionArguments={InputRanges:n,OutputValues:e,NoDataRanges:r},R.variableName="Raster";let w=new D;return w.functionName="Colormap",w.functionArguments={Colormap:y,Raster:R},t.convertToRFT?new D({rasterFunctionDefinition:re(w)}):w}function ut(o,t){let n=bo.has(t)?Rr(t):null;return n&&o.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),o}function yi(o){if(o==null)return;let{fields:t}=o;return t?.find(e=>e?.name&&e.name.toLowerCase()==="value")?.name}function No(o,t){let n=[],{pixelType:e,rasterAttributeTable:r}=t,a=r==null?null:r.features,l=yi(r),p=o.defaultSymbol?.color?.toRgb(),m=o.uniqueValueInfos;if(m)if(a){if(l){let y=new Map;m.forEach(w=>{let S=w.value,g=mi(w);S!=null&&g?.a&&y.set(String(S),g.toRgb())});let R=o.field;R&&a.forEach(({attributes:w})=>{let S=String(w[R]),g=w[l],v=y.get(S);v?n.push([g,...v]):p&&n.push([g,...p])})}}else for(let y=0;y<m.length;y++){let R=m[y],w=mi(R),S=+R.value;if(w?.a){if(isNaN(S))return null;n.push([S,w.r,w.g,w.b])}}let d=e?ut(n,e):n,u=new D;return u.functionName="Colormap",u.functionArguments={},u.functionArguments.Colormap=d,u.variableName="Raster",t.convertToRFT?new D({rasterFunctionDefinition:re(u)}):u}function mi(o){return o.symbol?.type==="polygon-3d"?o.symbol.symbolLayers?.find(t=>t.type==="fill")?.material?.color:o.symbol?.color}function Oo(o,t){let n=o.extractColormap();if(!n||n.length===0)return null;let{pixelType:e}=t,r=e?ut(n,e):n,a=new D;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=r,t.convertToRFT?new D({rasterFunctionDefinition:re(a)}):a}function _o(o){let t=[],n=[];return o.forEach(e=>{t.push(e[0]),n.push(Sr([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:n}}var E=class extends h{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(o,t,n){this.layer.version<10.3||(t[n]=o)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(o,t,n){this.format&&this.format.toLowerCase().includes("jpg")&&o!=null&&(t[n]=o)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(o,t,n){this.format==="lerc"&&o!=null&&(t[n]=o)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){let{layer:o}=this;return o.pixelType!==o.serviceRasterInfo.pixelType?o.pixelType:void 0}writeLercVersion(o,t,n){this.format==="lerc"&&this.layer.version>=10.5&&(t[n]=o)}get version(){let o=this.layer;return o.commitProperty("bandIds"),o.commitProperty("format"),o.commitProperty("compressionQuality"),o.commitProperty("compressionTolerance"),o.commitProperty("interpolation"),o.commitProperty("noData"),o.commitProperty("noDataInterpretation"),o.commitProperty("mosaicRule"),o.commitProperty("rasterFunction"),o.commitProperty("adjustAspectRatio"),o.commitProperty("pixelFilter"),o.commitProperty("pixelType"),o.commitProperty("definitionExpression"),o.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(o){this._set("version",o)}get mosaicRule(){let o=this.layer,t=o.mosaicRule,n=o.definitionExpression;return t?n&&n!==t.where&&(t=t.clone(),t.where=n):n&&(t=new $({where:n})),t}get rasterFunction(){let o=this.layer,{rasterFunction:t}=o,n=o.pixelFilter,e=!o.format||o.format.includes("jpg")||o.format.includes("png");t=this._addResampleRasterFunction(t);let r=o.multidimensionalSubset?.areaOfInterest;return r&&(t=Po(t,r)),e&&!n&&o.renderer?.type!=="vector-field"&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(o){let t=this.layer,{rasterInfo:n,renderer:e}=t;return o=o||t.rasterFunction,!e||!ct(e)?o:dt(ci(e,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandNames:n.bandInfos.map(({name:r})=>r),convertColorRampToColormap:t.version<10.6,convertToRFT:!!o?.rasterFunctionDefinition,bandCount:n.bandCount}),o)}_addResampleRasterFunction(o){if(this.layer.renderer?.type!=="vector-field"||o?.functionName==="Resample")return o;let t=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,n=this.layer.serviceRasterInfo.pixelSize,e=new D({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:n}});return e=o?.rasterFunctionDefinition?new D({rasterFunctionDefinition:re(e)}):e,dt(e,o)}};function Po(o,t){let n=new D({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return dt(n,o)}i([s()],E.prototype,"layer",void 0),i([s({json:{write:!0}})],E.prototype,"adjustAspectRatio",null),i([b("adjustAspectRatio")],E.prototype,"writeAdjustAspectRatio",null),i([s({json:{write:!0}})],E.prototype,"bandIds",null),i([s({json:{write:!0}})],E.prototype,"compression",void 0),i([s({json:{write:!0}})],E.prototype,"compressionQuality",null),i([b("compressionQuality")],E.prototype,"writeCompressionQuality",null),i([s({json:{write:!0}})],E.prototype,"compressionTolerance",null),i([b("compressionTolerance")],E.prototype,"writeCompressionTolerance",null),i([s({json:{write:!0}})],E.prototype,"format",null),i([s({type:String,json:{read:{reader:te.read},write:{writer:te.write}}})],E.prototype,"interpolation",null),i([s({json:{write:!0}})],E.prototype,"noData",null),i([s({type:String,json:{read:{reader:Pe.read},write:{writer:Pe.write}}})],E.prototype,"noDataInterpretation",null),i([s({type:ue.apiValues,json:{read:ue.read,write:ue.write}})],E.prototype,"pixelType",null),i([s({json:{write:!0}})],E.prototype,"lercVersion",void 0),i([b("lercVersion")],E.prototype,"writeLercVersion",null),i([s({type:Number})],E.prototype,"version",null),i([s({json:{write:!0}})],E.prototype,"mosaicRule",null),i([s({json:{write:!0,name:"renderingRule"}})],E.prototype,"rasterFunction",null),E=i([c("esri.layers.support.ExportImageServiceParameters")],E);var xe=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};i([s({type:I,json:{read:!0}})],xe.prototype,"fromGeometry",void 0),i([s({type:I,json:{read:!0,write:!0}})],xe.prototype,"toGeometry",void 0),i([s({json:{write:!0}})],xe.prototype,"objectIds",void 0),i([s({type:String,json:{write:!0}})],xe.prototype,"where",void 0),i([s({type:Number,json:{write:!0}})],xe.prototype,"maxCount",void 0),xe=i([c("esri.rest.support.FindImagesParameters")],xe);var fi=xe;var yt=o=>{let t=class extends o{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return i([s({json:{write:!0}})],t.prototype,"make",void 0),i([s({json:{write:!0}})],t.prototype,"model",void 0),i([s({json:{write:!0}})],t.prototype,"focalLength",void 0),i([s({json:{write:!0}})],t.prototype,"pixelSize",void 0),i([s({json:{write:!0}})],t.prototype,"rows",void 0),i([s({json:{write:!0}})],t.prototype,"cols",void 0),t=i([c("esri.rest.support.CameraInfoMixin")],t),t};var ie=class extends yt(h){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(o,t){t.acquisitionDate=o?.getTime()}};i([s({json:{write:!0}})],ie.prototype,"id",void 0),i([s({json:{name:"uri",write:!0}})],ie.prototype,"referenceUri",void 0),i([s({type:Date,json:{write:!0}})],ie.prototype,"acquisitionDate",void 0),i([b("acquisitionDate")],ie.prototype,"writeAcquisitionDate",null),i([s({json:{write:!0}})],ie.prototype,"cameraID",void 0),i([s({type:I,json:{write:!0}})],ie.prototype,"center",void 0),i([s({type:I,json:{write:!0}})],ie.prototype,"perspectiveCenter",void 0),i([s({json:{write:!0}})],ie.prototype,"orientation",void 0),ie=i([c("esri.rest.support.ImageInspectionInfo")],ie);var hi=ie;var ft=class extends h{constructor(){super(...arguments),this.images=null}};i([s({type:[hi],json:{write:!0}})],ft.prototype,"images",void 0),ft=i([c("esri.rest.support.FindImagesResult")],ft);var gi=ft;var Ct,je=Ct=class extends h{constructor(o){super(o),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ct(P({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};i([s({type:[String],json:{name:"angleName",write:!0}})],je.prototype,"angleNames",void 0),i([s({type:I,json:{write:!0}})],je.prototype,"point",void 0),i([s({type:W,json:{write:!0}})],je.prototype,"spatialReference",void 0),i([s({type:me,json:{write:!0}})],je.prototype,"rasterId",void 0),je=Ct=i([c("esri.rest.support.ImageAngleParameters")],je);var Ri=je;var Ge=class extends h{constructor(o){super(o),this.north=null,this.up=null,this.spatialReference=null}};i([s({type:Number,json:{write:!0}})],Ge.prototype,"north",void 0),i([s({type:Number,json:{write:!0}})],Ge.prototype,"up",void 0),i([s({type:W,json:{write:!0}})],Ge.prototype,"spatialReference",void 0),Ge=i([c("esri.rest.support.ImageAngleResult")],Ge);var wi=Ge;var K=new st({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"}),Ie=class extends h{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};i([s({type:Number,json:{read:!0,write:!0}})],Ie.prototype,"value",void 0),i([s({type:String,json:{read:!0,write:!0}})],Ie.prototype,"displayValue",void 0),i([s({type:Number,json:{read:!0,write:!0}})],Ie.prototype,"uncertainty",void 0),Ie=i([c("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],Ie);var de=class extends Ie{constructor(){super(...arguments),this.unit=null}};i([s({type:String,json:{read:ee.read,write:ee.write}})],de.prototype,"unit",void 0),de=i([c("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],de);var Ye=class extends Ie{constructor(){super(...arguments),this.unit=null}};i([s({type:String,json:{read:Je.read,write:Je.write}})],Ye.prototype,"unit",void 0),Ye=i([c("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Ye);var Le=class extends Ie{constructor(){super(...arguments),this.unit=null}};i([s({type:String,json:{read:Ee.read,write:Ee.write}})],Le.prototype,"unit",void 0),Le=i([c("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],Le);var Fe=class extends h{constructor(o){super(o),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};i([s()],Fe.prototype,"type",void 0),i([s({type:K.apiValues,json:{read:K.read,write:K.write}})],Fe.prototype,"measureOperation",void 0),i([s({type:$,json:{write:!0}})],Fe.prototype,"mosaicRule",void 0),i([s({type:I,json:{write:!0}})],Fe.prototype,"pixelSize",void 0),i([s({json:{write:!0}})],Fe.prototype,"raster",void 0),Fe=i([c("esri.rest.support.BaseImageMeasureParameters")],Fe);var Te=Fe;var Mt,ye=Mt=class extends Te{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=o.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Mt(P({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([s({types:V,json:{name:"fromGeometry",read:!0,write:!0}})],ye.prototype,"geometry",void 0),i([b("geometry")],ye.prototype,"writeGeometry",null),i([s({type:K.apiValues,json:{write:K.write}})],ye.prototype,"measureOperation",null),i([s({json:{read:!0}})],ye.prototype,"is3D",void 0),i([s({type:String,json:{read:ee.read,write:ee.write}})],ye.prototype,"linearUnit",void 0),i([s({type:String,json:{read:Je.read,write:Je.write}})],ye.prototype,"areaUnit",void 0),ye=Mt=i([c("esri.rest.support.ImageAreaParameters")],ye);var vi=ye;var et=class extends h{constructor(o){super(o),this.name=null,this.sensorName=null}};i([s({type:String,json:{read:!0,write:!0}})],et.prototype,"name",void 0),i([s({type:String,json:{read:!0,write:!0}})],et.prototype,"sensorName",void 0),et=i([c("esri.rest.support.BaseImageMeasureResult")],et);var De=et;var tt=class extends De{constructor(){super(...arguments),this.area=null,this.perimeter=null}};i([s({type:Ye,json:{read:!0,write:!0}})],tt.prototype,"area",void 0),i([s({type:de,json:{read:!0,write:!0}})],tt.prototype,"perimeter",void 0),tt=i([c("esri.rest.support.ImageAreaResult")],tt);var bi=tt;var ht=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.outSpatialReference=null}};i([s({type:W,json:{name:"outSR",write:!0}})],ht.prototype,"outSpatialReference",void 0),ht=i([c("esri.rest.support.ImageBoundaryParameters")],ht);var Si=ht;var Ue=class extends h{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(o,t){return o==null?null:o.rings?Ke.fromJSON(o):be.fromJSON(o)}};i([s({type:Number,json:{write:!0}})],Ue.prototype,"area",void 0),i([s({types:V,json:{name:"shape",write:!0}})],Ue.prototype,"geometry",void 0),i([H("geometry")],Ue.prototype,"readGeometry",null),Ue=i([c("esri.rest.support.ImageBoundaryResult")],Ue);var xi=Ue;var Vt,le=Vt=class extends Te{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=o.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Vt(P({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([s({type:I,json:{read:!0,write:!0}})],le.prototype,"fromGeometry",void 0),i([b("fromGeometry")],le.prototype,"writeFromGeometry",null),i([s({type:I,json:{read:!0,write:!0}})],le.prototype,"toGeometry",void 0),i([s({type:K.apiValues,json:{write:K.write}})],le.prototype,"measureOperation",null),i([s({json:{read:!0}})],le.prototype,"is3D",void 0),i([s({type:String,json:{read:ee.read,write:ee.write}})],le.prototype,"linearUnit",void 0),i([s({type:String,json:{read:Ee.read,write:Ee.write}})],le.prototype,"angularUnit",void 0),le=Vt=i([c("esri.rest.support.ImageDistanceParameters")],le);var Ii=le;var ze=class extends De{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};i([s({type:de,json:{read:!0,write:!0}})],ze.prototype,"distance",void 0),i([s({type:Le,json:{read:!0,write:!0}})],ze.prototype,"azimuthAngle",void 0),i([s({type:Le,json:{read:!0,write:!0}})],ze.prototype,"elevationAngle",void 0),ze=i([c("esri.rest.support.ImageDistanceResult")],ze);var Fi=ze;var fe=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=JSON.stringify(o.toJSON()))}};i([s({types:V,json:{read:U,write:!0}})],fe.prototype,"geometry",void 0),i([b("geometry")],fe.prototype,"writeGeometry",null),i([s({json:{write:!0}})],fe.prototype,"objectIds",void 0),i([tr(sr,{ignoreUnknown:!1,name:"spatialRel"})],fe.prototype,"spatialRelationship",void 0),i([s({type:qe,json:{name:"time",write:!0}})],fe.prototype,"timeExtent",void 0),i([s({type:String,json:{write:!0}})],fe.prototype,"where",void 0),fe=i([c("esri.rest.support.ImageGPSInfoParameters")],fe);var Ti=fe;var gt=class extends yt(h){constructor(){super(...arguments),this.id=null}};i([s({json:{write:!0}})],gt.prototype,"id",void 0),gt=i([c("esri.rest.support.CameraInfo")],gt);var Di=gt;var oe=class extends h{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(o,t){t.acquisitionDate=o?.getTime()}};i([s({json:{write:!0}})],oe.prototype,"id",void 0),i([s({json:{write:!0}})],oe.prototype,"name",void 0),i([s({type:Date,json:{write:!0}})],oe.prototype,"acquisitionDate",void 0),i([b("acquisitionDate")],oe.prototype,"writeAcquisitionDate",null),i([s({json:{write:!0}})],oe.prototype,"cameraID",void 0),i([s({type:I,json:{write:!0}})],oe.prototype,"center",void 0),i([s({json:{write:!0}})],oe.prototype,"gps",void 0),i([s({json:{write:!0}})],oe.prototype,"orientation",void 0),oe=i([c("esri.rest.support.ImageGPSInfo")],oe);var Ni=oe;var rt=class extends h{constructor(){super(...arguments),this.images=null,this.cameras=null}};i([s({type:[Ni],json:{write:!0}})],rt.prototype,"images",void 0),i([s({type:[Di],json:{write:!0}})],rt.prototype,"cameras",void 0),rt=i([c("esri.rest.support.ImageGPSInfoResult")],rt);var Oi=rt;var At,he=At=class extends Te{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=o.toJSON())}get measureOperation(){return this.operationType}clone(){return new At(P({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([s({type:I,json:{read:!0}})],he.prototype,"fromGeometry",void 0),i([b("fromGeometry")],he.prototype,"writeFromGeometry",null),i([s({type:I,json:{read:!0,write:!0}})],he.prototype,"toGeometry",void 0),i([s({type:K.apiValues,json:{write:K.write}})],he.prototype,"measureOperation",null),i([s({json:{read:!0}})],he.prototype,"operationType",void 0),i([s({type:String,json:{read:ee.read,write:ee.write}})],he.prototype,"linearUnit",void 0),he=At=i([c("esri.rest.support.ImageHeightParameters")],he);var _i=he;var Rt=class extends De{constructor(){super(...arguments),this.height=null}};i([s({type:de,json:{read:!0,write:!0}})],Rt.prototype,"height",void 0),Rt=i([c("esri.rest.support.ImageHeightResult")],Rt);var Pi=Rt;var Jt,G=Jt=class extends h{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=JSON.stringify(o.toJSON()))}set mosaicRule(o){let t=o;t?.mosaicMethod&&(t=$.fromJSON(x(f({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}writeMosaicRule(o,t,n){o!=null&&(t[n]=JSON.stringify(o.toJSON()))}set rasterFunction(o){let t=o;t?.rasterFunction&&(t=D.fromJSON(x(f({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("rasterFunction",t)}writeRasterFunction(o,t,n){o!=null&&(t[n]=JSON.stringify(o.toJSON())),o.rasterFunctionDefinition&&(t[n]=JSON.stringify(o.rasterFunctionDefinition))}writeRasterFunctions(o,t,n){o!=null&&(t[n]=JSON.stringify(o.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(o,t,n){o!=null&&(t[n]=JSON.stringify(o))}writeTimeExtent(o,t,n){if(o!=null){let e=o.start!=null?o.start.getTime():null,r=o.end!=null?o.end.getTime():null;t[n]=e!=null?r!=null?`${e},${r}`:`${e}`:null}}clone(){return new Jt(P({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};i([s({types:V,json:{write:!0}})],G.prototype,"geometry",void 0),i([b("geometry")],G.prototype,"writeGeometry",null),i([s({type:$,json:{write:!0}})],G.prototype,"mosaicRule",null),i([b("mosaicRule")],G.prototype,"writeMosaicRule",null),i([s({type:D,json:{write:!0,name:"renderingRule"}})],G.prototype,"rasterFunction",null),i([b("rasterFunction")],G.prototype,"writeRasterFunction",null),i([s({type:[D],json:{write:!0,name:"renderingRules"}})],G.prototype,"rasterFunctions",void 0),i([b("rasterFunctions")],G.prototype,"writeRasterFunctions",null),i([s({type:I,json:{write:!0}})],G.prototype,"pixelSize",void 0),i([b("pixelSize")],G.prototype,"writePixelSize",null),i([s({type:Boolean,json:{write:!0}})],G.prototype,"returnGeometry",void 0),i([s({type:Boolean,json:{write:!0}})],G.prototype,"returnCatalogItems",void 0),i([s({type:Boolean,json:{write:!0}})],G.prototype,"returnPixelValues",void 0),i([s({type:Number,json:{write:!0}})],G.prototype,"maxItemCount",void 0),i([s({type:qe,json:{write:{target:"time"}}})],G.prototype,"timeExtent",void 0),i([b("timeExtent")],G.prototype,"writeTimeExtent",null),i([s({json:{write:!0}})],G.prototype,"raster",void 0),i([s({json:{write:!0}})],G.prototype,"viewId",void 0),i([s({type:Boolean,json:{write:!0}})],G.prototype,"processAsMultidimensional",void 0),G=Jt=i([c("esri.rest.support.ImageIdentifyParameters")],G);var wt=G;var se=class extends h{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};i([s({json:{write:!0}})],se.prototype,"catalogItemVisibilities",void 0),i([s({type:nt,json:{write:!0}})],se.prototype,"catalogItems",void 0),i([s({type:I,json:{write:!0}})],se.prototype,"location",void 0),i([s({json:{write:!0}})],se.prototype,"name",void 0),i([s({json:{write:!0}})],se.prototype,"objectId",void 0),i([s({json:{write:!0}})],se.prototype,"processedValues",void 0),i([s({json:{write:!0}})],se.prototype,"properties",void 0),i([s({json:{write:!0}})],se.prototype,"value",void 0),se=i([c("esri.rest.support.ImageIdentifyResult")],se);var ji=se;var Et,He=Et=class extends h{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(o,t,n){t.geometries={geometryType:"esriGeometryPoint",geometries:o.map(e=>e.toJSON())}}clone(){return new Et({geometries:this.geometries?.map(o=>o.clone())??[],rasterId:this.rasterId})}};i([s({type:[I],json:{write:!0}})],He.prototype,"geometries",void 0),i([b("geometries")],He.prototype,"writeGeometry",null),i([s({type:me,json:{write:!0}})],He.prototype,"rasterId",void 0),He=Et=i([c("esri.rest.support.ImagePixelLocationParameters")],He);var Ci=He;var vt=class extends h{constructor(){super(...arguments),this.geometries=null}};i([s({json:{write:!0}})],vt.prototype,"geometries",void 0),vt=i([c("esri.rest.support.ImagePixelLocationResult")],vt);var Mi=vt;var qt,Ce=qt=class extends Te{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=o.toJSON())}get measureOperation(){let{is3D:o,geometry:t}=this;return t.type==="point"?o?"point-3D":"point":o?"centroid-3D":"centroid"}clone(){return new qt(P({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([s({types:V,json:{name:"fromGeometry",read:U}})],Ce.prototype,"geometry",void 0),i([b("geometry")],Ce.prototype,"writeGeometry",null),i([s({type:K.apiValues,json:{read:K.read,write:K.write}})],Ce.prototype,"measureOperation",null),i([s({json:{read:!0}})],Ce.prototype,"is3D",void 0),Ce=qt=i([c("esri.rest.support.ImagePointParameters")],Ce);var Vi=Ce;var bt=class extends De{constructor(){super(...arguments),this.point=null}};i([s({type:I,json:{name:"point.value",read:!0,write:!0}})],bt.prototype,"point",void 0),bt=i([c("esri.rest.support.ImagePointResult")],bt);var Ai=bt;var Gt,Z=Gt=class extends h{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=o.toJSON())}set locations(o){if(o?.length){let t=new ir({spatialReference:o[0].spatialReference,points:o.map(({x:n,y:e})=>[n,e])});this._set("locations",o),this.geometry=t}}clone(){return new Gt(P({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};i([s({types:V,json:{read:U}})],Z.prototype,"geometry",void 0),i([b("geometry")],Z.prototype,"writeGeometry",null),i([s({type:[I]})],Z.prototype,"locations",null),i([s({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],Z.prototype,"interpolation",void 0),i([s({type:$,json:{write:!0}})],Z.prototype,"mosaicRule",void 0),i([s({type:[String],json:{write:!0}})],Z.prototype,"outFields",void 0),i([s({type:I,json:{write:!0}})],Z.prototype,"pixelSize",void 0),i([s({type:String,json:{write:!0}})],Z.prototype,"raster",void 0),i([s({type:Boolean,json:{write:!0}})],Z.prototype,"returnFirstValueOnly",void 0),i([s({type:Number,json:{write:!0}})],Z.prototype,"sampleDistance",void 0),i([s({type:Number,json:{write:!0}})],Z.prototype,"sampleCount",void 0),i([s({type:Number,json:{write:!0}})],Z.prototype,"sliceId",void 0),i([s({type:qe,json:{read:{source:"time"},write:{target:"time"}}})],Z.prototype,"timeExtent",void 0),Z=Gt=i([c("esri.rest.support.ImageSampleParameters")],Z);var Ji=Z;var ge=class extends h{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};i([s({json:{write:!0}})],ge.prototype,"attributes",void 0),i([s({type:I,json:{write:!0}})],ge.prototype,"location",void 0),i([s({json:{write:!0}})],ge.prototype,"locationId",void 0),i([s({json:{write:!0}})],ge.prototype,"rasterId",void 0),i([s({json:{write:!0}})],ge.prototype,"resolution",void 0),i([s({json:{write:!0}})],ge.prototype,"pixelValue",void 0),ge=i([c("esri.rest.support.ImageSample")],ge);var Ei=ge;var St=class extends h{constructor(){super(...arguments),this.samples=[]}};i([s({type:[Ei],json:{write:!0}})],St.prototype,"samples",void 0),St=i([c("esri.rest.support.ImageSampleResult")],St);var qi=St;var Me=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(o,t,n){t.geometries=o?.length?{geometryType:A(o[0]),geometries:o.map(e=>x(f({},e.toJSON()),{spatialReference:void 0}))}:null}};i([s({types:[V]})],Me.prototype,"geometries",void 0),i([b("geometries")],Me.prototype,"writeGeometries",null),i([s({type:[me],json:{write:!0}})],Me.prototype,"rasterIds",void 0),i([s({type:W,json:{name:"outSR",write:!0}})],Me.prototype,"outSpatialReference",void 0),Me=i([c("esri.rest.support.ImageToMapMultirayParameters")],Me);var Gi=Me;var Re=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=x(f({},o.toJSON()),{spatialReference:void 0}))}};i([s({types:V,json:{read:U,write:!0}})],Re.prototype,"geometry",void 0),i([b("geometry")],Re.prototype,"writeGeometry",null),i([s({json:{write:!0}})],Re.prototype,"rasterId",void 0),i([s({type:W,json:{name:"outSR",write:!0}})],Re.prototype,"outSpatialReference",void 0),i([s({json:{name:"options.DOff",write:!0}})],Re.prototype,"depthOffset",void 0),i([s({json:{name:"options.Adjust",write:!0}})],Re.prototype,"adjust",void 0),Re=i([c("esri.rest.support.ImageToMapParameters")],Re);var Li=Re;var it=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};i([s({type:String,json:{name:"uri",write:!0}})],it.prototype,"referenceUri",void 0),i([s({type:Number,json:{write:!0}})],it.prototype,"rasterId",void 0),it=i([c("esri.rest.support.ImageUrlParameters")],it);var Ui=it;var xt=class extends h{constructor(){super(...arguments),this.url=null}};i([s({json:{name:"imageURL",write:!0}})],xt.prototype,"url",void 0),xt=i([c("esri.rest.support.ImageUrlResult")],xt);var zi=xt;var Lt=new st({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0}),we=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(o,t,n){o?.length&&(t.geometryType=A(o[0]),t.geometries=o.map(e=>e.toJSON()))}};i([s({types:[V]})],we.prototype,"geometries",void 0),i([b("geometries")],we.prototype,"writeGeometries",null),i([s({type:$,json:{write:!0}})],we.prototype,"mosaicRule",void 0),i([s({type:I,json:{write:!0}})],we.prototype,"pixelSize",void 0),i([s({json:{write:!0}})],we.prototype,"constantZ",void 0),i([s({type:Lt.apiValues,json:{read:Lt.read,write:Lt.write}})],we.prototype,"baseType",void 0),we=i([c("esri.rest.support.ImageVolumeParameters")],we);var Hi=we;var ae=class extends h{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};i([s({json:{write:!0}})],ae.prototype,"area",void 0),i([s({json:{write:!0}})],ae.prototype,"cut",void 0),i([s({json:{write:!0}})],ae.prototype,"fill",void 0),i([s({json:{name:"maxz",write:!0}})],ae.prototype,"maxZ",void 0),i([s({json:{name:"minz",write:!0}})],ae.prototype,"minZ",void 0),i([s({json:{name:"meanz",write:!0}})],ae.prototype,"meanZ",void 0),i([s({json:{write:!0}})],ae.prototype,"cutCellCount",void 0),i([s({json:{write:!0}})],ae.prototype,"fillCellCount",void 0),ae=i([c("esri.rest.support.ImageVolume")],ae);var Bi=ae;var It=class extends h{constructor(){super(...arguments),this.volumes=[]}};i([s({type:[Bi],json:{write:!0}})],It.prototype,"volumes",void 0),It=i([c("esri.rest.support.ImageVolumeResult")],It);var Qi=It;var Ve=class extends k.ClonableMixin(h){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=JSON.stringify(o))}};i([s({types:V,json:{read:U,write:!0}})],Ve.prototype,"geometry",void 0),i([b("geometry")],Ve.prototype,"writeGeometry",null),i([s({json:{write:!0}})],Ve.prototype,"rasterId",void 0),i([s({json:{name:"options.VisibleOnly",write:!0}})],Ve.prototype,"visibleOnly",void 0),Ve=i([c("esri.rest.support.MapToImageParameters")],Ve);var ki=Ve;var Ne=class extends h{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(o,t){return o.spatialReference||(o=x(f({},o),{spatialReference:t.Shape.spatialReference})),I.fromJSON(o)}};i([s({types:V,json:{name:"Shape",read:U,write:!0}})],Ne.prototype,"geometry",void 0),i([s({json:{name:"Length",write:!0}})],Ne.prototype,"length",void 0),i([s({json:{name:"Area",write:!0}})],Ne.prototype,"area",void 0),i([s({type:I,json:{name:"Center",write:!0}})],Ne.prototype,"center",void 0),i([H("center")],Ne.prototype,"readCenter",null),Ne=i([c("esri.rest.support.MeasureAreaFromImageResult")],Ne);var $i=Ne;var Ut,Be=Ut=class extends h{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(o,t,n){o!=null&&(t.geometryType=A(o),t[n]=x(f({},o.toJSON()),{spatialReference:void 0}))}clone(){let o=P({geometry:this.geometry,rasterId:this.rasterId});return new Ut(o)}};i([s({types:V,json:{name:"fromGeometry",read:U,write:!0}})],Be.prototype,"geometry",void 0),i([b("geometry")],Be.prototype,"writeGeometry",null),i([s({json:{write:!0}})],Be.prototype,"rasterId",void 0),Be=Ut=i([c("esri.rest.support.MeasureFromImageParameters")],Be);var Wi=Be;var ot=class extends h{constructor(){super(...arguments),this.geometry=null,this.length=null}};i([s({types:V,json:{name:"Shape",read:U,write:!0}})],ot.prototype,"geometry",void 0),i([s({json:{name:"Length",write:!0}})],ot.prototype,"length",void 0),ot=i([c("esri.rest.support.MeasureLengthFromImageResult")],ot);var Ki=ot;function zt(o){let t=o?.time;if(t&&(t.start!=null||t.end!=null)){let n=[];t.start!=null&&n.push(t.start),t.end==null||n.includes(t.end)||n.push(t.end),o.time=n.join(",")}}async function Zi(o,t,n){t=q(oi,t);let e=z(o),r=t.geometry?[t.geometry]:[],a=await Se(r),l=t.toJSON();zt(l);let p=a?.[0];p!=null&&(l.geometry=pe(p));let m=Q(f(x(f({},e.query),{f:"json"}),l));return B(m,n)}async function Xi(o,t,n){let e=(t=q(Hi,t)).toJSON();e.geometries=JSON.stringify(e.geometries);let r=z(o),a=Q(f(x(f({},r.query),{f:"json"}),e)),l=B(a,n),{data:p}=await N(`${r.path}/calculateVolume`,l);return Qi.fromJSON({volumes:p.results})}async function Yi(o,t,n){let e=(t=q(Ri,t)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=Tt(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(e.spatialReference=Ae(t.spatialReference));let r=z(o),a=Q(f(x(f({},r.query),{f:"json"}),e)),l=B(a,n),{data:p}=await N(`${r.path}/computeAngles`,l);return p.spatialReference=p.spatialReference?p.spatialReference.geodataXform!=null?new W({wkid:0,imageCoordinateSystem:p.spatialReference}):W.fromJSON(p.spatialReference):null,p.north==="NaN"&&(p.north=null),p.up==="NaN"&&(p.up=null),new wi(p)}async function eo(o,t,n){let e=(t=q(Ci,t)).toJSON(),{geometries:r}=t;if(r)for(let d=0;d<r.length;d++)r[d].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[d].spatialReference=Tt(r[d].spatialReference));let a=z(o),l=Q(f(x(f({},a.query),{f:"json"}),e)),p=B(l,n),{data:m}=await N(`${a.path}/computePixelLocation`,p);return Mi.fromJSON(m)}async function to(o,t,n){let e=await Zi(o,t,n),r=z(o),{data:a}=await N(`${r.path}/computeStatisticsHistograms`,e),{statistics:l}=a;return l?.length&&l.forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:l,histograms:a.histograms}}async function ro(o,t,n){let e=await Zi(o,t,n),r=z(o),{data:a}=await N(`${r.path}/computeHistograms`,e);return{histograms:a.histograms}}async function io(o,t,n){let e=(t=q(Ji,t)).toJSON();zt(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));let r=await Se(t.geometry),a=r?.[0];a!=null&&(e.geometry=pe(a));let l=z(o),p=Q(f(x(f({},l.query),{f:"json"}),e)),m=B(p,n),{data:d}=await N(`${l.path}/getSamples`,m),u=d.samples.map(y=>{let R=y.value==="NaN"||y.value===""?null:y.value.split(" ").map(w=>Number(w));return x(f({},y),{pixelValue:R})});return qi.fromJSON({samples:u})}async function Ht(o,t,n){t=q(wt,t);let e=z(o),r=t.geometry?[t.geometry]:[];return Se(r).then(a=>{let l=t.toJSON(),p=a?.[0];p!=null&&(l.geometry=JSON.stringify(pe(p)));let m=Q(f(x(f({},e.query),{f:"json"}),l)),d=B(m,n);return N(e.path+"/identify",d)}).then(a=>ji.fromJSON(a.data))}async function oo(o,t,n){t=q(_i,t);let e=await Ft(o,t,[t.fromGeometry,t.toGeometry],n);return Pi.fromJSON(e)}async function so(o,t,n){t=q(vi,t);let e=await Ft(o,t,[t.geometry],n);return bi.fromJSON(e)}async function ao(o,t,n){t=q(Vi,t);let e=await Ft(o,t,[t.geometry],n);return Ai.fromJSON(e)}async function no(o,t,n){t=q(Ii,t);let e=await Ft(o,t,[t.fromGeometry,t.toGeometry],n);return Fi.fromJSON(e)}async function Ft(o,t,n,e){let r=z(o),a=await Se(n),l=t.toJSON();a[0]!=null&&(l.fromGeometry=JSON.stringify(pe(a[0]))),a[1]!=null&&(l.toGeometry=JSON.stringify(pe(a[1])));let p=Q(f(x(f({},r.query),{f:"json"}),l)),m=B(p,e),{data:d}=await N(r.path+"/measure",m);return d}async function lo(o,t,n){let e=await mo(o,t,n);return Ki.fromJSON(e)}async function po(o,t,n){let e=await mo(o,t,n);return $i.fromJSON(e)}async function mo(o,t,n){t=q(Wi,t);let e=z(o),r=t.toJSON(),a=Q(f(x(f({},e.query),{f:"json"}),r)),l=B(a,n),{data:p}=await N(e.path+"/measureFromImage",l);return p}function pe(o){let t=o.toJSON();return o.spatialReference?.imageCoordinateSystem&&(t.spatialReference=Tt(o.spatialReference)),t}function Tt(o){let{imageCoordinateSystem:t}=o;if(t){let{id:n,referenceServiceName:e}=t;return n!=null?e?{icsid:n,icsns:e}:{icsid:n}:{ics:t}}return o.toJSON()}function Ae(o,t){if(!o.imageCoordinateSystem)return We(o);let n=Tt(o),{icsid:e,icsns:r}=n;return e==null||r!=null&&!t?.toLowerCase().includes("/"+r.toLowerCase()+"/")?JSON.stringify(n):`0:${e}`}async function uo(o,t,n){t=q(Si,t);let e=z(o),r=t.toJSON();t.outSpatialReference&&(r.outSR=Ae(t.outSpatialReference));let a=Q(f(x(f({},e.query),{f:"json"}),r)),l=B(a,n),{data:p}=await N(e.path+"/queryBoundary",l);return xi.fromJSON(p)}async function co(o,t,n){let e=(t=q(Ti,t)).toJSON();zt(e),e.objectIds?.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");let r=await Se(t.geometry),a=r?.[0];a!=null&&(e.geometry=pe(a));let l=a?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=Ae(l));let p=z(o),m=Q(f(x(f({},p.query),{f:"json"}),e)),d=B(m,n),{data:u}=await N(`${p.path}/queryGPSInfo`,d);return Oi.fromJSON(u)}async function yo(o,t,n){let e=(t=q(Li,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=pe(t.geometry)),t.depthOffset&&t.adjust||delete e.options;let r=z(o),a=Q(f(x(f({},r.query),{f:"json"}),e)),l=B(a,n),{data:p}=await N(`${r.path}/imageToMap`,l);return U(p)}async function fo(o,t,n){let e=(t=q(Gi,t)).toJSON();t.rasterIds?.length&&(e.rasterIds=t.rasterIds.join(","));let r=z(o),a=Q(f(x(f({},r.query),{f:"json"}),e)),l=B(a,n),{data:p}=await N(`${r.path}/imageToMapMultiray`,l);return U(p)}async function ho(o,t,n){let e=(t=q(ki,t)).toJSON(),r=await Se(t.geometry),a=r?.[0];a!=null&&(e.geometry=pe(a)),t.visibleOnly||delete e.options;let l=a?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=Ae(l));let p=z(o),m=Q(f(x(f({},p.query),{f:"json"}),e)),d=B(m,n),{data:u}=await N(`${p.path}/mapToImage`,d);return U(u)}async function go(o,t,n){let e=(t=q(Ui,t)).toJSON(),r=z(o),a=Q(f(x(f({},r.query),{f:"json"}),e)),l=B(a,n),{data:p}=await N(`${r.path}/getImageUrl`,l);return zi.fromJSON(p)}async function Ro(o,t,n){let e=(t=q(fi,t)).toJSON(),r=await Se([t.fromGeometry,t.toGeometry]);r[0]!=null&&(e.fromGeometry=pe(r[0]),r[0].spatialReference&&(e.inSR=Ae(r[0].spatialReference))),r[1]!=null&&(e.toGeometry=pe(r[1])),t.objectIds?.length&&(e.objectIds=e.objectIds.join(","));let a=z(o),l=Q(f(x(f({},a.query),{f:"json"}),e)),p=B(l,n),{data:m}=await N(`${a.path}/find`,p);return gi.fromJSON(m)}async function wo(o,t,n){let e=z(o),r=Q(x(f({},e?.query),{f:"json"})),a=B(r,n),l=`${e?.path}/${t}/info`,p=N(`${l}`,a),m=N(`${l}/keyProperties`,a),d=await Promise.allSettled([p,m]),u=d[0].status==="fulfilled"?d[0].value.data:null,y=d[1].status==="fulfilled"?d[1].value.data:null,R=null;u.statistics?.length&&(R=u.statistics.map(J=>({min:J[0],max:J[1],avg:J[2],stddev:J[3]})));let w=be.fromJSON(u.extent),S=Math.ceil(w.width/u.pixelSizeX-.1),g=Math.ceil(w.height/u.pixelSizeY-.1),v=w.spatialReference,F=new I({x:u.pixelSizeX,y:u.pixelSizeY,spatialReference:v}),j=u.histograms?.length?u.histograms:null,M=new vr({origin:u.origin,blockWidth:u.blockWidth,blockHeight:u.blockHeight,firstPyramidLevel:u.firstPyramidLevel,maximumPyramidLevel:u.maxPyramidLevel});return new pt({width:S,height:g,bandCount:u.bandCount,extent:w,spatialReference:v,pixelSize:F,pixelType:u.pixelType.toLowerCase(),statistics:R,histograms:j,keyProperties:y,storageInfo:M})}var jo=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Co=$t(kt,{min:0,max:255});function Mo(o){let t=JSON.stringify(o),n=t.includes('"rasterFunctionDefinition":{'),e=n?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),r=e?.map(a=>n?a.slice(8,-18):a.slice(18,-1));return r?r.join("/"):null}var vo=o=>{let t=class extends o{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new E({layer:this}))}readServiceSupportsMosaicRule(e,r){return this._isMosaicRuleSupported(r)}get _rasterFunctionNamesIndex(){let e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(r=>{e.set(r.name.toLowerCase().replaceAll(/ /gi,"_"),r.name)}),e}readBandIds(e,r){if(Array.isArray(e)&&e.length>0&&e.every(a=>typeof a=="number"))return e}readCapabilities(e,r){return this._readCapabilities(r)}writeCompressionQuality(e,r,a){e!=null&&this.format!=="lerc"&&(r[a]=e)}writeCompressionTolerance(e,r,a){this.format==="lerc"&&e!=null&&(r[a]=e)}readDefaultMosaicRule(e,r){return this._serviceSupportsMosaicRule?$.fromJSON(r):null}get fieldsIndex(){return this.fields?new or(this.fields):null}set format(e){e&&jo.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,r){return r.serviceDataType==="esriImageServiceDataTypeVector-UV"||r.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,r){return r.minLOD!=null&&r.maxLOD!=null?e:0}readMaxScale(e,r){return r.minLOD!=null&&r.maxLOD!=null?e:0}set mosaicRule(e){let r=e;r?.mosaicMethod&&(r=$.fromJSON(x(f({},r.toJSON()),{mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation}))),this._set("mosaicRule",r)}readMosaicRule(e,r){let a=e||r.mosaicRule;return a?$.fromJSON(a):this._isMosaicRuleSupported(r)?$.fromJSON(r):null}writeMosaicRule(e,r,a){let{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(r[a]=l.toJSON())}writeNoData(e,r,a){e!=null&&typeof e=="number"&&(r[a]=Co(e))}readObjectIdField(e,r){return e||(e=r.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid")?.name),e}get parsedUrl(){return Wt(this.url)}readSourceType(e,r){return this._isMosaicDataset(r)?"mosaic-dataset":"raster-dataset"}get renderer(){let{activePresetRendererName:e,presetRenderers:r}=this;return e?r?.find(({name:l})=>l===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,r,a){let l=r?.layerDefinition?.drawingInfo?.renderer,p=ii(l,a);return p==null?null:(p.type==="vector-field"&&r.symbolTileSize&&!l.symbolTileSize&&(p.symbolTileSize=r.symbolTileSize),ct(p)||Dt.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),p)}writeRenderer(e,r,a){r.layerDefinition=r.layerDefinition||{},r.layerDefinition.drawingInfo=r.layerDefinition.drawingInfo||{},r.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(r.symbolTileSize=e.symbolTileSize)}get rasterFields(){let e=this.fields?.map(l=>l.clone())??[];e.push(Ar()),this.sourceType==="mosaic-dataset"&&this.fields?.length&&e.push(Er()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:l})=>l.toLowerCase()==="none")&&e.push(Jr()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:l})=>l.toLowerCase()!=="none").forEach(({name:l})=>e.push(qr(l)));let{rasterInfo:r}=this;if(this._isVectorDataSet()){let l=r?.multidimensionalInfo?.variables[0].unit?.trim(),p=Gr(l),m=Lr();e.push(p,m)}if(r?.multidimensionalInfo&&this.sourceType==="raster-dataset"){let l=zr(r.multidimensionalInfo);e.push(...l)}let a=r?.attributeTable;if(a!=null){let l=Ur(a);e.push(...l)}return e}set rasterFunction(e){let r=e;r?.rasterFunction&&(r=D.fromJSON(x(f({},r.toJSON()),{rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments}))),this._set("rasterFunction",r)}readRasterFunction(e,r){let a=r.rasterFunctionInfos;return r.renderingRule||a?.length&&a[0].name!=="None"?this._isRFTJson(r.renderingRule)?D.fromJSON({rasterFunctionDefinition:r.renderingRule}):D.fromJSON(r.renderingRule||{rasterFunctionInfos:r.rasterFunctionInfos}):null}readSpatialReference(e,r){let a=e||r.extent.spatialReference;return a?W.fromJSON(a):null}writePixelType(e,r,a){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(r[a]=ue.toJSON(e))}readVersion(e,r){let a=r.currentVersion;return a||(a=r.hasOwnProperty("fields")||r.hasOwnProperty("timeInfo")?10:9.3),a}applyFilter(e){let r=e;return this.pixelFilter&&(r=this._clonePixelData(e),this.pixelFilter(r)),r}async applyRenderer(e,r){let a=e,{renderer:l,symbolizer:p,pixelFilter:m,bandIds:d}=this;if(!this._isPicture()&&l&&p&&!m){let u=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),y=this._rasterJobHandler.instance;if(y){u&&(p.bind(),await y.updateSymbolizer(p,r),this._cachedRendererJson=l.toJSON());let R=await y.symbolize(f({bandIds:d},e),r);a={extent:e.extent,pixelBlock:R}}else a={extent:e.extent,pixelBlock:p.symbolize(f({bandIds:d},e))}}return a}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsCalculateVolume)throw new T("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=P(e),this.mosaicRule&&e.mosaicRule==null&&(e.mosaicRule=this.mosaicRule),Xi(this.url,e,this._getRequestOptions(r))}async computeAngles(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeAngles)throw new T("imagery-layer:compute-angles","this operation is not supported on the input image service");return Yi(this.url,e,this._getRequestOptions(r))}async computePixelSpaceLocations(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputePixelLocation)throw new T("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return eo(this.url,e,this._getRequestOptions(r))}async computeHistograms(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeHistograms)throw new T("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=P(e),this._applyMosaicAndRenderingRules(e),ro(this.url,e,this._getRequestOptions(r))}async computeStatisticsHistograms(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeStatisticsHistograms)throw new T("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=P(e),this._applyMosaicAndRenderingRules(e),to(this.url,e,this._getRequestOptions(r))}async measureHeight(e,r){let a=await this._fetchCapabilities(r?.signal);if(!(e.operationType==="base-and-top"?a.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?a.mensuration.supportsHeightFromBaseAndTopShadow:a.mensuration.supportsHeightFromTopAndTopShadow))throw new T("imagery-layer:measure-height","this operation is not supported on the input image service");return e=P(e),this._applyMosaicRule(e),oo(this.url,e,this._getRequestOptions(r))}async measureAreaAndPerimeter(e,r){let a=await this._fetchCapabilities(r?.signal);if(!(a.mensuration.supportsAreaAndPerimeter&&(!e.is3D||a.mensuration.supports3D)))throw new T("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=P(e),this._applyMosaicRule(e),so(this.url,e,this._getRequestOptions(r))}async measureDistanceAndAngle(e,r){let a=await this._fetchCapabilities(r?.signal);if(!(a.mensuration.supportsDistanceAndAngle&&(!e.is3D||a.mensuration.supports3D)))throw new T("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=P(e),this._applyMosaicRule(e),no(this.url,e,this._getRequestOptions(r))}async measurePointOrCentroid(e,r){let a=await this._fetchCapabilities(r?.signal);if(!(a.mensuration.supportsPointOrCentroid&&(!e.is3D||a.mensuration.supports3D)))throw new T("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=P(e),this._applyMosaicRule(e),ao(this.url,e,this._getRequestOptions(r))}async measureLengthFromImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new T("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new T("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return lo(this.url,e,this._getRequestOptions(r))}async measureAreaFromImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new T("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new T("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return po(this.url,e,this._getRequestOptions(r))}getField(e){let{fieldsIndex:r}=this;return r?.get(e)}getFieldDomain(e,r){let a=this.getField(e);return a?a.domain:null}async fetchImage(e,r,a,l={}){if(e==null||r==null||a==null)throw new T("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){let y=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});y&&(this.rasterInfo=y)}let p=this.getExportImageServiceParameters(e,r,a,l.timeExtent);if(p==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){let F=document.createElement("canvas");return F.width=r,F.height=a,l.returnImageBitmap?{imageBitmap:await Nt(F,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:F}}let{bandIds:y,rasterInfo:R}=this,w=(y?.length||R.bandCount)??0,S=r*a,g=R.pixelType,v=[];for(let F=0;F<w;F++)v.push(lt.createEmptyBand(g,S));return{pixelData:{pixelBlock:new lt({width:r,height:a,pixels:v,mask:new Uint8Array(S),pixelType:g}),extent:e}}}let m=!!l.requestAsImageElement&&!this.pixelFilter,d=m&&!!l.returnImageBitmap,u={imageServiceParameters:p,imageProps:{extent:e,width:r,height:a,format:this.format},requestAsImageElement:m,returnImageBitmap:d,signal:l.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return N(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(r=>r.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new T("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):N(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(r=>nt.fromJSON(r.data))}getCatalogItemRasterInfo(e,r){let a=x(f({},r),{query:this._getQueryParams()});return wo(n(this.parsedUrl),e,a)}async getCatalogItemICSInfo(e,r){let{data:a}=await N(n(this.parsedUrl)+"/"+e+"/info/ics",f({query:this._getQueryParams()},r)),l=a?.ics;if(!l)return;let p=null;try{p=(await N(n(this.parsedUrl)+"/"+e+"/info",f({query:this._getQueryParams()},r))).data.extent}catch{}if(!p?.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};let m=this.version>=10.7?N(n(this.parsedUrl)+"/"+e+"/info/icstopixel",f({query:this._getQueryParams()},r)).then(O=>O.data).catch(()=>({})):{},d=p.spatialReference,u={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[p]}),inSR:We(d),outSR:"0:"+e},y=N(n(this.parsedUrl)+"/project",f({query:this._getQueryParams(u)},r)).then(O=>O.data).catch(()=>({})),R=5,w=(p.xmin+p.xmax)/2,S=(p.ymax-p.ymin)/(R+1),g=p.ymin+S,v=[];for(let O=0;O<R;O++)v.push({x:w,y:g+S*O});let F={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:v}),inSR:We(d),outSR:"0:"+e},j=N(n(this.parsedUrl)+"/project",f({query:this._getQueryParams(F)},r)).then(O=>O.data).catch(()=>({})),M=await Promise.all([m,y,j]),J=M[0].ipxf;if(J==null){let O=l.geodataXform?.xf_0;O?.name?.toLowerCase()==="topup"&&O?.coefficients?.length===6&&(J={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:O.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}let C=be.fromJSON(M[1]?.geometries?.[0]);C&&(C.spatialReference=new W({wkid:0,imageCoordinateSystem:l}));let _=M[2].geometries?M[2].geometries.filter(O=>O?.x!=null&&O.y!=null&&O.x!=="NaN"&&O.y!=="NaN"):[],L=_.length;if(L<3)return{ics:l,icsToPixelTransform:J,icsExtent:C,northDirection:null};let Y=0,Qe=0,Oe=0,ke=0;for(let O=0;O<L;O++)Y+=_[O].x,Qe+=_[O].y,Oe+=_[O].x*_[O].x,ke+=_[O].x*_[O].y;let ne=(L*ke-Y*Qe)/(L*Oe-Y*Y),_e=0,$e=_[R-1].x>_[0].x,ve=_[R-1].y>_[0].y;return ne===1/0?_e=ve?90:270:ne===0?_e=$e?0:180:ne>0?_e=$e?180*Math.atan(ne)/Math.PI:180*Math.atan(ne)/Math.PI+180:ne<0&&(_e=ve?180+180*Math.atan(ne)/Math.PI:360+180*Math.atan(ne)/Math.PI),{ics:l,icsToPixelTransform:J,icsExtent:C,northDirection:_e}}async generateRasterInfo(e,r){e=q(D,e);let a=x(f({},r),{query:this._getQueryParams()});if(!e||e.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??jt(n(this.parsedUrl),this.sourceJSON,a);let l=Mo(e);if(!l)throw new T("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];let p=si(n(this.parsedUrl),e,a);this._functionRasterInfos[l]=p;try{return await p}catch(m){throw this._functionRasterInfos[l]=null,m}}getExportImageServiceParameters(e,r,a,l){e=e.clone().shiftCentralMeridian();let p=Ae(e.spatialReference,n(this.parsedUrl)),m=this.exportImageServiceParameters.toJSON(),{bandIds:d,noData:u}=m,{renderingRule:y}=m,R=this.rasterFunction?.rasterFunctionDefinition,w=this.renderer?.type,S=!w||w==="raster-stretch"||w==="raster-colormap"||w==="unique-value"||w==="class-breaks"||w==="raster-shaded-relief";if(d?.length&&this._hasRasterFunction(this.rasterFunction)&&!R&&S){let F={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:d}};if(y.rasterFunction==="Stretch")F.rasterFunctionArguments.Raster=y.rasterFunctionArguments.Raster,y.rasterFunctionArguments.Raster=F;else if(y.rasterFunction==="Colormap"){let j=y.rasterFunctionArguments.Raster;j?.rasterFunction==="Stretch"?(F.rasterFunctionArguments.Raster=j.rasterFunctionArguments.Raster,j.rasterFunctionArguments.Raster=F):(F.rasterFunctionArguments.Raster=j,y.rasterFunctionArguments.Raster=F)}else F.rasterFunctionArguments.Raster=y,y=F;m.bandIds=void 0}else m.bandIds=d?.join(",");Array.isArray(u)&&u.length>0&&(m.noData=u.join(","));let g=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(g.isOutSide)return null;m.mosaicRule=g.mosaicRule!=null?JSON.stringify(g.mosaicRule):null,l=g.timeExtent,m.renderingRule=this._getRenderingRuleString(D.fromJSON(y));let v={};if(l!=null){let{start:F,end:j}=l.toJSON();F&&j&&F===j?v.time=""+F:F==null&&j==null||(v.time=`${F??"null"},${j??"null"}`)}return f(f({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:p,imageSR:p,size:r+","+a},m),v)}async getSamples(e,r){if(!(await this._fetchCapabilities(r?.signal))?.operations.supportsGetSamples)throw new T("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=P(e);let{raster:l}=this;return l&&e.raster==null&&(e.raster=l),io(this.url,e,this._getRequestOptions(r))}async identify(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsIdentify)throw new T("imagery-layer:identify","identify operation is not supported on the input image service");e=P(e),this.version<10.91&&e.geometry?.type==="extent"&&(e.geometry=Ke.fromExtent(e.geometry));let a=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(a.isOutSide)throw new T("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=a.timeExtent,e.mosaicRule=a.mosaicRule;let{raster:l,rasterFunction:p}=this;return p&&e.rasterFunction==null&&(e.rasterFunction=p),l&&e.raster==null&&(e.raster=l),Ht(this.url,e,this._getRequestOptions(r))}async imageToMap(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMap)throw new T("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return yo(n(this.parsedUrl),e,this._getRequestOptions(r))}async imageToMapMultiray(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMapMultiray)throw new T("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return fo(n(this.parsedUrl),e,this._getRequestOptions(r))}async mapToImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMapToImage)throw new T("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ho(n(this.parsedUrl),e,this._getRequestOptions(r))}async findImages(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsFindImages)throw new T("imagery-layer:find-images","findImages operation is not supported on the input image service");return Ro(n(this.parsedUrl),e,this._getRequestOptions(r))}async getImageUrl(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsGetImageUrl)throw new T("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return go(n(this.parsedUrl),e,this._getRequestOptions(r))}createQuery(){return new at({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryBoundary)throw new T("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},uo(n(this.parsedUrl),e,this._getRequestOptions(r))}async queryRasters(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),gr(this.url,e,r)}async queryObjectIds(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),hr(this.url,e,r)}async queryGPSInfo(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryGPSInfo)throw new T("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},co(n(this.parsedUrl),e,this._getRequestOptions(r))}async queryRasterCount(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),fr(this.url,e,r)}async queryVisibleRasters(e,r){if(!e)throw new T("imagery-layer: query-visible-rasters","missing query parameter");await this.load();let{pixelSize:a,returnDomainValues:l,returnTopmostRaster:p,showNoDataRecords:m}=r||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1},d=!1,u=null,y=null,R=ce.servicePixelValue.toLowerCase(),w=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(d=e.outFields.some(C=>!C.toLowerCase().startsWith(R)),this.version>=10.4)){let C=e.outFields.filter(L=>L.toLowerCase().startsWith(R)&&L.length>R.length).map(L=>{let Y=L.slice(R.length+1);return[this._updateRenderingRulesFunctionName(Y,w),Y]});u=C.map(L=>new D({functionName:L[0]})),y=C.map(L=>L[1]);let{rasterFunction:_}=this;u.length===0?_?.functionName?(u.push(_),y.push(_.functionName)):u=null:_?.functionName&&!u.some(L=>L.functionName===_.functionName)&&(u.push(_),y.push(_.functionName))}let S=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:g}=this,v=e.timeExtent||this.timeExtent;if(g){let{isOutside:C,intersection:_}=mt(g,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(C)throw new T("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");_?.timeExtent!=null&&(v=_.timeExtent)}let F=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,v),j=e.geometry;this.version<10.91&&j?.type==="extent"&&(j=Ke.fromExtent(j));let M=this._getQueryParams({geometry:j,timeExtent:v,mosaicRule:F,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:u,pixelSize:a,returnCatalogItems:d,returnGeometry:S,raster:this.raster,maxItemCount:p?1:null});delete M.f;let J=new wt(M);try{await this._generateRasterInfo(this.rasterFunction);let C=await Ht(this.url,J,{signal:r?.signal,query:f({},this.customParameters)}),_=e.outFields,L=C.value!=null&&C.value.toLowerCase().includes("nodata"),Y=d&&!S&&C?.catalogItems?.features.length&&(m||!L),Qe=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?kr({rasterInfo:this.rasterInfo,multidimensionalDefinition:F?.multidimensionalDefinition,timeExtent:v,multidimensionalSubset:this.multidimensionalSubset}):null;if(!Y)return this._processVisibleRastersResponse(C,{returnDomainValues:l,templateRRFunctionNames:y,showNoDataRecords:m,templateFields:_,effectiveMultidimensionalDefinition:Qe});let Oe=this.objectIdField||"ObjectId",ke=C.catalogItems?.features??[],ne=ke.map(ve=>ve.attributes?.[Oe]),_e=new at({objectIds:ne,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[Oe]}),$e=await this.queryRasters(_e);return $e?.features?.length&&$e.features.forEach(ve=>{ke.forEach(O=>{O.attributes[Oe]===ve.attributes[Oe]&&ve.geometry&&(O.geometry=ve.geometry.clone(),e.outSpatialReference!=null&&(O.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(C,{returnDomainValues:l,templateRRFunctionNames:y,showNoDataRecords:m,templateFields:_,effectiveMultidimensionalDefinition:Qe})}catch{throw new T("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,r){let a=N(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:r}).then(m=>m.data?.statistics),l=N(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:r}).then(m=>m.data?.histograms),p=await Promise.all([a,l]);return p[0]&&p[0].forEach(m=>{m.avg=m.mean,m.stddev=m.standardDeviation}),{statistics:p[0]||null,histograms:p[1]||null}}async createFlowMesh(e,r){let a=this._rasterJobHandler.instance;return a?a.createFlowMesh(e,r):Tr(e.meshType,e.simulationSettings,e.flowData,r.signal!=null?r.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){let r=e??this.serviceRasterInfo.multidimensionalInfo;return Wr(this.multidimensionalSubset,r)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);let r=this.sourceJSON,a=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):jt(n(this.parsedUrl),r,{signal:e,query:this._getQueryParams()}).then(m=>(this._set("serviceRasterInfo",m),this._set("multidimensionalInfo",m.multidimensionalInfo),ai(m,r),m)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,p=this._getRasterFunctionInfos();return Promise.all([a,l,p]).then(m=>{m[1]?this._set("rasterInfo",m[1]):this._set("rasterInfo",m[0]),m[2]&&this._set("rasterFunctionInfos",m[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),Dt.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([Kt(()=>this.rasterFunction,u=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(u).then(y=>{y&&(this.rasterInfo=y)})})]);let{serviceRasterInfo:d}=this;d.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(d)})}_combineMosaicRuleWithTimeExtent(e,r){let a=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||r==null||a?.startField==null)return e;let{startField:p}=a,m=l.variables.some(g=>g.dimensions.some(v=>v.name===p))?p:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(g=>g.dimensionName!==m),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];let d=e.multidimensionalDefinition.filter(g=>g.dimensionName===m),u=r.start!=null?r.start.getTime():null,y=r.end!=null?r.end.getTime():null,R=u==null||y==null||u===y,w=R?[u||y]:[[u,y]],S=this.version>=10.8;if(d.length)d.forEach(g=>{g.dimensionName===m&&(S?(g.dimensionName=null,g.isSlice=!1,g.values=[]):(g.isSlice=R,g.values=w))});else if(!S){let g=e.multidimensionalDefinition.filter(v=>v.variableName!=null&&v.dimensionName==null);g.length?g.forEach(v=>{v.dimensionName=m,v.isSlice=R,v.values=w}):e.multidimensionalDefinition.push(new jr({variableName:"",dimensionName:m,isSlice:R,values:w}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(r=>!(!r.variableName&&!r.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQuery)throw new T("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?q(at,e):this.createQuery(),r=this._getRequestOptions(r),this.raster&&(r.query=x(f({},r.query),{raster:this.raster})),{query:e,requestOptions:r}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;let e=new Qr;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){let{rasterInfo:r,rasterFunction:a}=this;return e.type==="unique-value"&&this._hasRasterFunction(a)&&r?.bandCount===1&&["u8","s8"].includes(r.pixelType)||r!=null&&e!=null&&Xr(r).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let r=this.sourceJSON;if(!r){let{data:a,ssl:l}=await N(n(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=a,this.sourceJSON=r,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(r.capabilities?.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly")>-1)throw new T("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;let r=this._isMosaicDataset(e),a=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return r||a}_isVectorFieldResampleFunction(e){if(e==null)return!1;let{functionName:r,functionArguments:a}=e,l=r?.toLowerCase()==="resample",p=a?.ResampleType||a?.resampleType;return l&&(p===7||p===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){let r=this._isPicture(),{rasterInfo:a}=this;if(!r&&!this.pixelFilter||this._isVectorDataSet()){let l=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,p=Kr({variableName:l,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&a.bandCount>=3){let d=p?.bandIds??Yr(a);!d||a.bandCount===3&&d[0]===0&&d[1]===1&&d[2]===2||(this.bandIds=d)}e||(e=p?.renderer??Zr(a,{bandIds:this.bandIds,variableName:this.rasterFunction?null:l}));let m=ei(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=m,this.symbolizer.rasterInfo=a):this.symbolizer=new Fr({rendererJSON:m,rasterInfo:a}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){e?.renderingRule!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));let{raster:r,viewId:a}=this;return f(f({raster:r,viewId:a,f:"json"},e),this.customParameters)}_getRequestOptions(e){return x(f({},e),{query:f(f({},e?.query),this.customParameters)})}_decodePixelBlock(e,r,a){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:r}):Ot(e,r,a)}async _getRasterFunctionInfos(e){let r=this.sourceJSON.rasterFunctionInfos;return this.loaded?r:r&&this.version>=10.3?r.length===1&&r[0].name.toLowerCase()==="none"?r:(await N(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){let{imageProps:r,requestAsImageElement:a,returnImageBitmap:l,signal:p}=e;if(a&&this._canRequestImageElement(r.format)){let g=`${n(this.parsedUrl)}/exportImage`,{data:v}=await N(g,{responseType:l?"blob":"image",query:this._getQueryParams(f(f({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:p});return v instanceof Blob?{imageBitmap:await Nt(v,g,p),params:r}:{imageOrCanvasElement:v,params:r}}let m=this._initJobHandler(),d=N(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(f({f:"image"},e.imageServiceParameters)),signal:p}),u=(await Promise.all([d,m]))[0].data,y=r.format||"jpgpng",R=y;if(R!=="bsq"&&R!=="bip"&&(R=wr(u)),!R)throw new T("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));let w={signal:p};return{pixelData:{pixelBlock:await(y==="gif"||y==="bmp"||y.includes("png")&&(R==="png"||R==="jpg")?Ot(u,f({useCanvas:!0},r),w):this._decodePixelBlock(u,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:y},w)),extent:r.extent},params:r}}_generateRasterInfo(e,r){return this.generateRasterInfo(e,r).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let r=$r(e,{multidimensionalSubset:this.multidimensionalSubset});if(r!=null&&r.length>0){this.mosaicRule=this.mosaicRule||new $;let a=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&r.forEach(l=>l.variableName=""),r=r.filter(({variableName:l,dimensionName:p})=>l&&l!=="*"||p),!a?.length&&r.length&&(this.mosaicRule.multidimensionalDefinition=r)}}_processVisibleRastersResponse(e,r){r=r||{};let a=e.value,{templateRRFunctionNames:l,showNoDataRecords:p,returnDomainValues:m,templateFields:d}=r,u=e.processedValues,y=e.catalogItems?.features,R=e.properties?.Values?.map(M=>M.replaceAll(/ /gi,", "))||[],w=this.objectIdField||"ObjectId",S=typeof a=="string"&&a.toLowerCase().includes("nodata"),g=[];if(a&&!y&&!S){let M={};M[w]=0,R=[a],y=[new nr({geometry:this.fullExtent,attributes:M})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&Hr(this.rasterFields,M,r.effectiveMultidimensionalDefinition)}if(!y)return[];this._updateResponseFieldNames(y,d),S&&!p&&(y=[]);let{itemPixelValue:v,servicePixelValue:F}=ce,j=this.rasterFields.some(M=>M.name===v);for(let M=0;M<y.length;M++){let J=y[M];if(a!=null){let C=R[M],_=this.rasterFunction&&u&&u.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?u[l.indexOf(this.rasterFunction.functionName)]:a;if(C.toLowerCase()==="nodata"&&!p)continue;j&&(J.attributes[v]=C),J.attributes[F]=_,this._updateFeatureWithMagDirValues(J,C);let L=this.fields&&this.fields.length>0,Y=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?L?C:a:_;this.rasterFunction||(Y=L?C:a),this._updateFeatureWithRasterAttributeTableValues(J,Y)}if(J.sourceLayer=J.layer=this,m&&this._updateFeatureWithDomainValues(J),l&&u&&l.length===u.length)for(let C=0;C<l.length;C++){let _=`${ce.servicePixelValue}.${l[C]}`;J.attributes[_]=u[C]}g.push(y[M])}return g}_processMultidimensionalIntersection(e,r,a){let{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:r,mosaicRule:a=this._combineMosaicRuleWithTimeExtent(a,r)};if(l){let{isOutside:p,intersection:m}=mt(l,{geometry:e,timeExtent:r});if(p)return{isOutSide:!0,timeExtent:null,mosaicRule:null};m?.timeExtent!=null&&(r=m.timeExtent)}if(a=this._combineMosaicRuleWithTimeExtent(a,r),a?.multidimensionalDefinition){let{isOutside:p}=mt(l,{multidimensionalDefinition:a.multidimensionalDefinition});if(p)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:r,mosaicRule:a}}_updateFeatureWithRasterAttributeTableValues(e,r){let a=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(a==null)return;let{features:l,fields:p}=a,m=p.map(u=>u.name).find(u=>u.toLowerCase()==="value");if(!m)return;let d=l.filter(u=>u.attributes[m]===(r!=null?parseInt(r,10):null));d&&d[0]&&p.forEach(u=>{let y=Mr+u.name;e.attributes[y]=d[0].attributes[u.name]})}_updateFeatureWithMagDirValues(e,r){if(!this._isVectorDataSet())return;let a=r.split(/,\s*/).map(u=>parseFloat(u)),l=a.map(u=>[u]),p=a.map(u=>({minValue:u,maxValue:u,noDataValue:null})),m=new lt({height:1,width:1,pixelType:"f32",pixels:l,statistics:p});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:m,extent:new be(0,0,0,0,this.spatialReference)});let d=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[m.pixels[0][0],m.pixels[1][0]]:Ir([m.pixels[0][0],m.pixels[1][0]]);e.attributes[ce.magnitude]=d[0],e.attributes[ce.direction]=d[1]}_updateFeatureWithDomainValues(e){let r=this.fields&&this.fields.filter(a=>a.domain&&a.domain.type==="coded-value");r?.forEach(a=>{let l=e.attributes[a.name];if(l!=null){let p=a.domain.codedValues.find(m=>m.code===l);p&&(e.attributes[a.name]=p.name)}})}_updateResponseFieldNames(e,r){if(!r||r.length<1)return;let a=this.fieldsIndex;a!=null&&e.forEach(l=>{if(l?.attributes)for(let p of r){let m=a.get(p)?.name;m&&m!==p&&(l.attributes[p]=l.attributes[m],delete l.attributes[m])}})}_getRenderingRuleString(e){if(e){let r=e.toJSON();return r=r.rasterFunctionDefinition??r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRasterFunction(e){return e?.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,r){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");let a=e.toLowerCase().replaceAll(/ /gi,"_");return r.has(a)?r.get(a):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){let{raster:r,mosaicRule:a,rasterFunction:l}=this;l&&e.rasterFunction==null&&(e.rasterFunction=l),a&&e.mosaicRule==null&&(e.mosaicRule=a),r&&e.raster==null&&(e.raster=r)}_applyMosaicRule(e){let{raster:r,mosaicRule:a}=this;a&&e.mosaicRule==null&&(e.mosaicRule=a),r&&e.raster==null&&(e.raster=r)}_readCapabilities(e){let r=e.capabilities?e.capabilities.toLowerCase().split(",").map(j=>j.trim()):["image","catalog"],{currentVersion:a,advancedQueryCapabilities:l,maxRecordCount:p}=e,m=r.includes("image"),d=e.serviceDataType==="esriImageServiceDataTypeElevation",u=!(!e.spatialReference&&!e.extent?.spatialReference),y=r.includes("edit"),R=r.includes("mensuration")&&u,w=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(j=>j.trim()),S=R&&w.includes("basic"),g=this._isMosaicDataset(e)&&r.includes("catalog"),v=r.includes("download"),F=a>=10.7&&d||a>=11.4&&(d||R&&w.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:m,supportsExportImage:m,supportsIdentify:m,supportsImageToMap:a>=11.2&&g,supportsImageToMapMultiray:a>=11.2&&g,supportsMapToImage:a>=11.2&&g,supportsFindImages:a>=11.2&&g,supportsGetImageUrl:a>=11.3&&v,supportsMeasure:R,supportsMeasureFromImage:a>=11.2,supportsDownload:v,supportsQuery:g&&e.fields&&e.fields.length>0,supportsGetSamples:a>=10.2&&m,supportsProject:a>=10.3&&m,supportsComputeStatisticsHistograms:a>=10.4&&m,supportsQueryBoundary:a>=10.6&&m,supportsCalculateVolume:F,supportsComputePixelLocation:a>=10.7&&g,supportsComputeAngles:a>=10.91,supportsQueryGPSInfo:a>=11.2&&g,supportsAdd:y,supportsDelete:y,supportsEditing:y,supportsUpdate:y,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:p,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:S,supportsAreaAndPerimeter:S,supportsPointOrCentroid:S,supportsHeightFromBaseAndTop:R&&w.includes("base-top height"),supportsHeightFromBaseAndTopShadow:R&&w.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:R&&w.includes("top-top shadow height"),supports3D:R&&w.includes("3d")}}}};function n(e){return e?.path??""}return i([s({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),i([s({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),i([s({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),i([s({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),i([H("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),i([s({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),i([s()],t.prototype,"adjustAspectRatio",void 0),i([s({type:[me],json:{write:!0}})],t.prototype,"bandIds",void 0),i([H("bandIds")],t.prototype,"readBandIds",null),i([s({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),i([H("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),i([s({type:Number})],t.prototype,"compressionQuality",void 0),i([b("compressionQuality")],t.prototype,"writeCompressionQuality",null),i([s({type:Number})],t.prototype,"compressionTolerance",void 0),i([b("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),i([s({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),i([s({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),i([H("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),i([s({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),i([s({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),i([s()],t.prototype,"rasterInfo",void 0),i([s({readOnly:!0,type:[rr]})],t.prototype,"fields",void 0),i([s({readOnly:!0})],t.prototype,"fieldsIndex",null),i([s({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),i([H("service","format",["serviceDataType"])],t.prototype,"readFormat",null),i([s({type:be})],t.prototype,"fullExtent",void 0),i([s({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),i([s({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),i([s({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),i([s({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],t.prototype,"interpolation",void 0),i([s()],t.prototype,"minScale",void 0),i([H("service","minScale")],t.prototype,"readMinScale",null),i([s()],t.prototype,"maxScale",void 0),i([H("service","maxScale")],t.prototype,"readMaxScale",null),i([s({type:$})],t.prototype,"mosaicRule",null),i([H("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),i([b("mosaicRule")],t.prototype,"writeMosaicRule",null),i([s()],t.prototype,"multidimensionalInfo",void 0),i([s({type:Cr,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),i([s({json:{type:me}})],t.prototype,"noData",void 0),i([b("noData")],t.prototype,"writeNoData",null),i([s({type:String,json:{type:Pe.jsonValues,read:Pe.read,write:Pe.write}})],t.prototype,"noDataInterpretation",void 0),i([s({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),i([H("objectIdField")],t.prototype,"readObjectIdField",null),i([s({readOnly:!0})],t.prototype,"geometryType",void 0),i([s({})],t.prototype,"typeIdField",void 0),i([s({})],t.prototype,"types",void 0),i([s({readOnly:!0})],t.prototype,"parsedUrl",null),i([s({type:Function})],t.prototype,"pixelFilter",void 0),i([s()],t.prototype,"raster",void 0),i([s({readOnly:!0})],t.prototype,"sourceType",void 0),i([H("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),i([s()],t.prototype,"viewId",void 0),i([s()],t.prototype,"renderer",null),i([s({types:ti,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ri,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],t.prototype,"internalRenderer",null),i([H("internalRenderer")],t.prototype,"readRenderer",null),i([b("internalRenderer")],t.prototype,"writeRenderer",null),i([s({clonable:!1})],t.prototype,"symbolizer",void 0),i([s(_r)],t.prototype,"opacity",void 0),i([s({readOnly:!0})],t.prototype,"rasterFields",null),i([s({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),i([s({type:D,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),i([H("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),i([s({readOnly:!0})],t.prototype,"serviceDataType",void 0),i([s({readOnly:!0,type:W})],t.prototype,"spatialReference",void 0),i([H("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),i([s({type:ue.apiValues,json:{read:ue.read,type:ue.jsonValues}})],t.prototype,"pixelType",void 0),i([b("pixelType")],t.prototype,"writePixelType",null),i([s({constructOnly:!0,type:pt})],t.prototype,"serviceRasterInfo",void 0),i([s()],t.prototype,"sourceJSON",void 0),i([s(Nr)],t.prototype,"url",void 0),i([s({readOnly:!0})],t.prototype,"version",void 0),i([H("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=i([c("esri.layers.mixins.ArcGISImageService")],t),t};var X=class extends Xt(cr(er(Pr(ur(ni(vo(Yt(pr(lr(Zt(k.ClonableMixin(li)))))))))))){constructor(...o){super(...o),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Qt(async(t,n,e)=>{let{save:r,saveAs:a}=await import("./chunk-SQWWLHXG.js");switch(t){case Ze.SAVE:return r(this,n);case Ze.SAVE_AS:return a(this,e,n)}})}normalizeCtorArgs(o,t){return typeof o=="string"?f({url:o},t):o}load(o){let t=o!=null?o.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},o).catch(Bt).then(()=>this._fetchService(t))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(o){this._set("legendEnabled",o)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(o){this._set("listMode",o)}writeOperationalLayerType(o,t,n){let e=this.renderer?.type==="vector-field";t[n]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(o){let{rasterFields:t}=this,n=new Set,e=ce.itemPixelValue.toLowerCase(),r=this.sourceType==="raster-dataset",a=Vr.toLowerCase(),l=`${ce.servicePixelValue.toLowerCase()}.`;for(let d of t){let u=d.name.toLowerCase();u===e||u.startsWith(l)||r&&u.startsWith(a)||n.add(d.name)}let p=yr({fields:t,title:this.title},x(f({},o),{visibleFieldNames:n})),{rasterInfo:m}=this;return p?.fieldInfos&&m&&Br(p.fieldInfos,m),p}queryFeatures(o,t){return this.queryRasters(o,t).then(n=>{if(n?.features)for(let e of n.features)e.layer=e.sourceLayer=this;return n})}queryFeatureCount(o,t){return this.queryRasterCount(o,t)}redraw(){this.emit("redraw")}async save(o){return this._debouncedSaveOperations(Ze.SAVE,o)}async saveAs(o,t){return this._debouncedSaveOperations(Ze.SAVE_AS,t,o)}serviceSupportsSpatialReference(o){return dr(this,o)}write(o,t){if(!this._isPreviewLayer)return super.write(o,t);if(t?.messages){let n=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new T("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};i([s(Or)],X.prototype,"legendEnabled",null),i([s({type:["show","hide"]})],X.prototype,"listMode",null),i([s({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],X.prototype,"isReference",void 0),i([s({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],X.prototype,"operationalLayerType",void 0),i([b("web-map","operationalLayerType")],X.prototype,"writeOperationalLayerType",null),i([s(Dr)],X.prototype,"popupEnabled",void 0),i([s({type:ar,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],X.prototype,"popupTemplate",void 0),i([s({readOnly:!0})],X.prototype,"defaultPopupTemplate",null),i([s({readOnly:!0,json:{read:!1}})],X.prototype,"type",void 0),i([s({readOnly:!0})],X.prototype,"_isPreviewLayer",null),X=i([c("esri.layers.ImageryLayer")],X);var Ih=X;export{Ih as default};
