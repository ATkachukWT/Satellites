import{a as m,b as w,c as L,d,f as v,g as h,h as F,i as M,j as D}from"./chunk-TPRK33UF.js";import"./chunk-OBYVOHC5.js";import{a as b,b as S}from"./chunk-BEYU5OIP.js";import{a as f}from"./chunk-UO5Q6C3A.js";import{a as G}from"./chunk-AZ7O5NEQ.js";import{b as T}from"./chunk-K27EVVBH.js";import"./chunk-TPFJWNIU.js";import"./chunk-P25RU3X5.js";import"./chunk-XRRQM4E2.js";import"./chunk-GWBRHLNH.js";import"./chunk-BOVYXYHK.js";import"./chunk-JGEVVXD4.js";import"./chunk-B3FO6PT7.js";import"./chunk-C4UMJHQC.js";import"./chunk-BCREO4Q5.js";import"./chunk-LXFQWIWE.js";import"./chunk-QT6UNBJP.js";import"./chunk-JRCKELO6.js";import"./chunk-XZIOXVVJ.js";import"./chunk-5RAXVJQI.js";import{c as P}from"./chunk-EXJYW3PC.js";import"./chunk-SXQPBCOX.js";import"./chunk-LFH24RLM.js";import"./chunk-Z5Q7KLA4.js";import"./chunk-X4LNX4BR.js";import"./chunk-4XZ6X7MQ.js";import"./chunk-WLHY3MMA.js";import"./chunk-KGVXGH6H.js";import"./chunk-ARRCN5K3.js";import"./chunk-LXQPIAN7.js";import"./chunk-FTDD7QBB.js";import"./chunk-DB3UIQCU.js";import"./chunk-SBHKMV3P.js";import"./chunk-R4A63S45.js";import{s as I}from"./chunk-ETE32IYO.js";import"./chunk-ONUGDWDK.js";import"./chunk-SG7CQU4O.js";import"./chunk-QHVIRF5H.js";import"./chunk-WZDN6K3C.js";import"./chunk-QGVBCWUY.js";import"./chunk-OJQ73TPF.js";import"./chunk-354SCPDU.js";import"./chunk-OVHPPCBL.js";import"./chunk-IYZFKXJ6.js";import"./chunk-CKJ56T2Q.js";import"./chunk-SNFOAZZQ.js";import"./chunk-F6JAWRPN.js";import{t as p}from"./chunk-UHRSAPGQ.js";import"./chunk-V76GWARL.js";import"./chunk-N2WTMF3X.js";async function ee(t,a){let r=t.instance.portalItem;if(r?.id)return await r.load(a),C(t),t.validateItem&&t.validateItem(r),O(t,a)}function C(t){let a=t.instance.portalItem;if(!a?.type||!t.supportedTypes.includes(a.type))throw new p("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a?.type,expectedType:t.supportedTypes.join(", ")})}async function O(t,a){let r=t.instance,e=r.portalItem;if(!e)return;let{url:o,title:n}=e,l=f(e,"portal-item");if(r.type==="group")return R(r,l,t);o&&r.type!=="media"&&r.read({url:o},l);let u=new m,s=await A(t,u,a);return s&&r.read(s,l),r.resourceReferences={portalItem:e,paths:l.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:n},l),G(r,l)}async function R(t,a,r){let e=t.portalItem;if(!t.sourceIsPortalItem)return;let{title:o,type:n}=e;if(n==="Group Layer"){if(!T(e,"Map"))throw new p("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return k(t,r)}return t.read({title:o},a),N(t,r)}async function k(t,a){let r=t.portalItem,e=await r.fetchData("json");if(!e)return;if(!a.populateGroupLayer)throw new p("portal:missing-populate-group-layer","Missing populate group layer");let o=f(r,"web-map");t.read(e,o),await a.populateGroupLayer(t,e,{context:o}),t.resourceReferences={portalItem:r,paths:o.readResourcePaths??[]}}async function N(t,a){let r,{portalItem:e}=t;if(!e)return;let o=e.type,n=a.layerModuleTypeMap;if(!n)throw new p("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(o){case"Feature Service":case"Feature Collection":r=n.FeatureLayer;break;case"Stream Service":r=n.StreamLayer;break;case"Scene Service":r=n.SceneLayer;break;default:throw new p("portal:unsupported-item-type-as-group",`The item type '${o}' is not supported as a 'IGroupLayer'`)}let l=new m,[u,s]=await Promise.all([r(),A(a,l)]),i=()=>u;if(o==="Feature Service"){let c=d(s)?.customParameters;s=e.url?await L(s,e.url,l):{},i=await K(s,n)||i;let y=await B(e.url,{customParameters:c,loadContext:l});return await g(t,i,i,s,n,y)}return o==="Scene Service"&&e.url&&(s=await D(e,s,l)),h(s)>0?await g(t,i,null,s,n):await j(t,i,n)}async function j(t,a,r){let{portalItem:e}=t;if(!e?.url)return;let o=await b(e.url);o&&g(t,a,null,{layers:o.layers?.map(w),tables:o.tables?.map(w)},r)}async function g(t,a,r,e,o,n){let l=e.layers||[],u=e.tables||[];if(t.portalItem?.type==="Feature Collection"?(l.forEach((s,i)=>{s.id=i,s?.layerDefinition?.type==="Table"&&u.push(s)}),l=l.filter(s=>s?.layerDefinition?.type!=="Table")):(l.reverse(),u.reverse()),l.forEach(s=>{let i=n?.(s);if(i||!n){let c=x(t,a(s),e,s,i);t.add(c)}}),u.length){let s=r?null:await o.FeatureLayer();u.forEach(i=>{let c=n?.(i);if(c||!n){let y=x(t,r?r(i):s,e,i,c);t.tables.add(y)}})}}function x(t,a,r,e,o){let n=t.portalItem,l={portalItem:n.clone(),layerId:e.id};e.url!=null&&(l.url=e.url);let u=new a(l);if("sourceJSON"in u&&(u.sourceJSON=o),u.type!=="subtype-group"&&u.type!=="catalog"&&(u.sublayerTitleMode="service-name"),n.type==="Feature Collection"){let s={origin:"portal-item",portal:n.portal||P.getDefault()};u.read(e,s);let i=r.showLegend;i!=null&&u.read({showLegend:i},s)}return u}async function A(t,a,r){if(t.supportsData===!1)return;let e=t.instance,o=e.portalItem;if(!o)return;let n=null;try{n=await o.fetchData("json",r)}catch{}if($(e)){let l=null,u=await E(o,n,a);if((n?.layers||n?.tables)&&u>0){if(e.layerId==null){let s=F(e.type),i=s?.length?v(n,s)[0]:d(n);i&&(e.layerId=i.id)}l=J(n,e),l?.layerType==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),l&&n.showLegend!=null&&(l.showLegend=n.showLegend)}return u>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),l}return n}async function E(t,a,r){if(a?.layers&&a?.tables)return h(a);let e=I(t.url);if(!e)return 1;let o=await r.fetchServiceMetadata(e.url.path,{customParameters:d(a)?.customParameters}).catch(()=>null);return(a?.layers?.length??o?.layers?.length??0)+(a?.tables?.length??o?.tables?.length??0)}function J(t,a){let{layerId:r}=a,e=t.layers?.find(o=>o.id===r)||t.tables?.find(o=>o.id===r);return e&&q(e,a)?e:null}function $(t){return t.type!=="stream"&&"layerId"in t}function q(t,a){let r="layerType"in t&&t.layerType,{type:e}=a;return!(e==="feature"&&r&&t.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!r||e==="oriented-imagery"&&!r||e==="subtype-group"&&!r)}async function B(t,a){let{layersJSON:r}=await S(t,a);if(!r)return null;let e=[...r.layers,...r.tables];return o=>e.find(n=>n.id===o.id)}async function K(t,a){let{layers:r,tables:e}=t,o=[...r??[],...e??[]];if(!o.length)return;let n=new Set,l=[];for(let{layerType:i}of o){let c=i??"ArcGISFeatureLayer";if(n.has(c))continue;n.add(c);let y=a[M(c)];l.push(y())}let u=await Promise.all(l),s=new Map;return Array.from(n).forEach((i,c)=>{s.set(i,u[c])}),({layerType:i})=>{let c=i??"ArcGISFeatureLayer";return s.get(c)}}export{ee as load};
