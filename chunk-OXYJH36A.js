import{a as i}from"./chunk-HF2RT2F4.js";import{a as o,d as p,e as c,f as g,g as h}from"./chunk-LIECELJH.js";import{a as f}from"./chunk-36MVAC23.js";import"./chunk-QCRXBE6I.js";import"./chunk-G7TP3ZYQ.js";import"./chunk-SBVUMOLF.js";import"./chunk-Y6YEAKJ5.js";import"./chunk-S52JRLJC.js";import"./chunk-U4TLMQTY.js";import"./chunk-PDQQY7RQ.js";import"./chunk-W5OI4BJ2.js";import"./chunk-RWCIDBNQ.js";import"./chunk-2NH7HOKA.js";import"./chunk-HM5RIVQC.js";import"./chunk-EM35R6FY.js";import"./chunk-2ZFXOJDB.js";import"./chunk-QXXXCEV5.js";import"./chunk-6B5XFA6F.js";import"./chunk-PTZYZULI.js";import"./chunk-NMLYCCKN.js";import"./chunk-RSDQHAJX.js";import"./chunk-BOVYXYHK.js";import"./chunk-QT6UNBJP.js";import"./chunk-F6JAWRPN.js";import"./chunk-V76GWARL.js";import"./chunk-N2WTMF3X.js";var L=class{async extract(e){let t=u(e),s=p(t),a=[t.data.buffer];return{result:m(s,a),transferList:a}}async extractComponentsEdgeLocations(e){let t=u(e),s=c(t.data,t.skipDeduplicate,t.indices,t.indicesLength),a=o(s,x),r=[];return{result:i(a.regular.instancesData,r),transferList:r}}async extractEdgeLocations(e){let t=u(e),s=c(t.data,t.skipDeduplicate,t.indices,t.indicesLength),a=o(s,y),r=[];return{result:i(a.regular.instancesData,r),transferList:r}}};function u(n){return{data:f.createView(n.dataBuffer),indices:n.indicesType==="Uint32Array"?new Uint32Array(n.indices):n.indicesType==="Uint16Array"?new Uint16Array(n.indices):n.indices,indicesLength:n.indicesLength,writerSettings:n.writerSettings,skipDeduplicate:n.skipDeduplicate}}function m(n,e){return e.push(n.regular.lodInfo.lengths.buffer),e.push(n.silhouette.lodInfo.lengths.buffer),{regular:{instancesData:i(n.regular.instancesData,e),lodInfo:{lengths:n.regular.lodInfo.lengths.buffer}},silhouette:{instancesData:i(n.silhouette.instancesData,e),lodInfo:{lengths:n.silhouette.lodInfo.lengths.buffer}},averageEdgeLength:n.averageEdgeLength}}var d=class{allocate(e){return g.createBuffer(e)}trim(e,t){return e.slice(0,t)}write(e,t,s){e.position0.setVec(t,s.position0),e.position1.setVec(t,s.position1)}},l=class{allocate(e){return h.createBuffer(e)}trim(e,t){return e.slice(0,t)}write(e,t,s){e.position0.setVec(t,s.position0),e.position1.setVec(t,s.position1),e.componentIndex.set(t,s.componentIndex)}},y=new d,x=new l;export{L as default};
