import{a as w,b as S,c as m,e as x}from"./chunk-TB6RJR23.js";import"./chunk-YSTOX7D2.js";import"./chunk-VCEKZDML.js";import{a as c,b as h}from"./chunk-XAHD7XBV.js";import{a as F}from"./chunk-J6YGDWJF.js";import"./chunk-YQNUGDFH.js";import"./chunk-QCZ3ZIGQ.js";import"./chunk-ZJWWZWMH.js";import"./chunk-W45QYQK6.js";import"./chunk-VMECOA4F.js";import{e as M}from"./chunk-PHODKV66.js";import{a as y}from"./chunk-JPMGMA4B.js";import"./chunk-KAMRW6HF.js";import"./chunk-UWWWQ44M.js";import"./chunk-BHB4UQZT.js";import"./chunk-DJW5LMRG.js";import"./chunk-ALWV3RJ2.js";import"./chunk-DEH76MSI.js";import"./chunk-JTDXB5TK.js";import{k as d}from"./chunk-XRRQM4E2.js";import"./chunk-GWBRHLNH.js";import"./chunk-RWCIDBNQ.js";import"./chunk-EM35R6FY.js";import{A as g}from"./chunk-6B5XFA6F.js";import"./chunk-ZTOZWLEE.js";import"./chunk-RJWOVI3M.js";import"./chunk-NRBJLISB.js";import"./chunk-PTZYZULI.js";import"./chunk-NMLYCCKN.js";import"./chunk-RSDQHAJX.js";import"./chunk-BOVYXYHK.js";import"./chunk-QT6UNBJP.js";import{a as p}from"./chunk-4XZ6X7MQ.js";import"./chunk-WLHY3MMA.js";import"./chunk-KGVXGH6H.js";import"./chunk-ARRCN5K3.js";import"./chunk-SBHKMV3P.js";import"./chunk-R4A63S45.js";import"./chunk-ETE32IYO.js";import"./chunk-ONUGDWDK.js";import"./chunk-SG7CQU4O.js";import"./chunk-QHVIRF5H.js";import"./chunk-WZDN6K3C.js";import"./chunk-QGVBCWUY.js";import"./chunk-OJQ73TPF.js";import"./chunk-354SCPDU.js";import"./chunk-OVHPPCBL.js";import"./chunk-IYZFKXJ6.js";import"./chunk-CKJ56T2Q.js";import"./chunk-SNFOAZZQ.js";import"./chunk-F6JAWRPN.js";import"./chunk-UHRSAPGQ.js";import{w as D,y as v}from"./chunk-V76GWARL.js";import"./chunk-N2WTMF3X.js";var A=class{transform(t){let e=this._transform(t),r=[e.points.buffer,e.rgb.buffer];e.pointIdFilterMap!=null&&r.push(e.pointIdFilterMap.buffer);for(let n of e.attributes)"buffer"in n.values&&v(n.values.buffer)&&n.values.buffer!==e.rgb.buffer&&r.push(n.values.buffer);return Promise.resolve({result:e,transferList:r})}_transform(t){let e=S(t.schema,t.geometryBuffer),r=e.length/3,n=null,i=new Array,o=m(t.primaryAttributeData,e,r);t.primaryAttributeData!=null&&o&&i.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:o});let u=m(t.modulationAttributeData,e,r);t.modulationAttributeData!=null&&u&&i.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:u});let a=w(t.rendererInfo,o,u,r);if(t.filterInfo&&t.filterInfo.length>0&&t.filterAttributesData!=null){let l=t.filterAttributesData.filter(D).map(f=>{let j=m(f,e,r),I={attributeInfo:f.attributeInfo,values:j};return i.push(I),I});n=new Uint32Array(r),r=x(e,a,n,t.filterInfo,l)}for(let l of t.userAttributesData){let f=m(l,e,r);i.push({attributeInfo:l.attributeInfo,values:f})}3*r<a.length&&(a=new Uint8Array(a.buffer.slice(0,3*r))),R(e,r,t.elevationOffset);let b=B(e,r,F.fromData(t.obbData),p.fromJSON(t.inSR),p.fromJSON(t.outSR));return{obbData:t.obbData,points:b,rgb:a,attributes:i,pointIdFilterMap:n}}};function B(s,t,e,r,n){if(!d(s,r,0,s,n,0,t))throw new Error("Can't reproject");let i=h(e.center),o=c(),u=c(),a=h(e.halfSize);M(O,e.quaternion);let b=new Float32Array(3*t);for(let l=0;l<t;l++){let f=3*l;o[0]=s[f]-i[0],o[1]=s[f+1]-i[1],o[2]=s[f+2]-i[2],g(u,o,O),a[0]=Math.max(a[0],Math.abs(u[0])),a[1]=Math.max(a[1],Math.abs(u[1])),a[2]=Math.max(a[2],Math.abs(u[2])),b[f++]=o[0],b[f++]=o[1],b[f]=o[2]}return e.halfSize=a,b}function R(s,t,e){if(e!==0)for(let r=0;r<t;r++)s[3*r+2]+=e}var O=y();function L(){return new A}export{L as default};
