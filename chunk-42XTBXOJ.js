import{D as h,R as n}from"./chunk-CKJ56T2Q.js";import{t as r}from"./chunk-UHRSAPGQ.js";var c=class{constructor(i,l=0,e=i.lods[i.lods.length-1].level){this.tileInfo=i,this.minLOD=l,this.maxLOD=e,i.lodAt(l)||(this.minLOD=i.lods[0].level),i.lodAt(e)||(this.maxLOD=i.lods[i.lods.length-1].level)}get effectiveMinLOD(){return this.minLOD??this.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(i,l,e){let t=this.tileInfo?.lodAt(i);return!t||i<this.minLOD||i>this.maxLOD?"unavailable":t.cols&&t.rows?e>=t.cols[0]&&e<=t.cols[1]&&l>=t.rows[0]&&l<=t.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(i,l,e,t){await n(t);let a=this.getAvailability(i,l,e);if(a==="unavailable")throw new r("tile-map:tile-unavailable","Tile is not available",{level:i,row:l,col:e});return a}async fetchAvailabilityUpsample(i,l,e,t,a){await n(a),t.level=i,t.row=l,t.col=e;let s=this.tileInfo;return s.updateTileInfo(t),this.fetchAvailability(i,l,e,a).catch(o=>{if(h(o))throw o;if(s.upsampleTile(t))return this.fetchAvailabilityUpsample(t.level,t.row,t.col,t,a);throw o})}};export{c as a};
