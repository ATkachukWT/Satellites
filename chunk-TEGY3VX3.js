import{a as g}from"./chunk-NKHROXYN.js";import{a as y}from"./chunk-CVX4TQC2.js";import{a as u}from"./chunk-2U44WK2Y.js";import{a as c}from"./chunk-EIMGIIJ4.js";import{a as p}from"./chunk-JUMM5VTE.js";import"./chunk-3HPBQSX2.js";import"./chunk-QGGZPZNN.js";import"./chunk-26JWDTE3.js";import"./chunk-GPDZGV7G.js";import"./chunk-BPX3YT3K.js";import"./chunk-QCZ3ZIGQ.js";import"./chunk-KBDKZSTB.js";import"./chunk-CJM4TC3F.js";import"./chunk-FXCL7YYQ.js";import{o as f}from"./chunk-YQGS4EZO.js";import"./chunk-PMVQ5DJK.js";import"./chunk-DVBZA6ZU.js";import"./chunk-6YRWGF73.js";import"./chunk-V2JYXY4D.js";import"./chunk-LXFQWIWE.js";import"./chunk-QT6UNBJP.js";import{d}from"./chunk-MWSXMSWY.js";import"./chunk-JRCKELO6.js";import{c as m}from"./chunk-YR2HD3ZC.js";import"./chunk-GJASVPF6.js";import"./chunk-XZIOXVVJ.js";import"./chunk-LFH24RLM.js";import"./chunk-Z5Q7KLA4.js";import"./chunk-X4LNX4BR.js";import"./chunk-4XZ6X7MQ.js";import"./chunk-WLHY3MMA.js";import"./chunk-KGVXGH6H.js";import"./chunk-ARRCN5K3.js";import"./chunk-LXQPIAN7.js";import"./chunk-DB3UIQCU.js";import"./chunk-SBHKMV3P.js";import"./chunk-R4A63S45.js";import"./chunk-ETE32IYO.js";import"./chunk-ONUGDWDK.js";import"./chunk-SG7CQU4O.js";import{H as l}from"./chunk-QHVIRF5H.js";import{I as h}from"./chunk-WZDN6K3C.js";import{a as s}from"./chunk-QGVBCWUY.js";import"./chunk-OJQ73TPF.js";import"./chunk-354SCPDU.js";import"./chunk-OVHPPCBL.js";import"./chunk-IYZFKXJ6.js";import"./chunk-CKJ56T2Q.js";import"./chunk-SNFOAZZQ.js";import"./chunk-F6JAWRPN.js";import{r as n}from"./chunk-UHRSAPGQ.js";import"./chunk-V76GWARL.js";import"./chunk-N2WTMF3X.js";var r=class extends c(y(u(p))){constructor(){super(...arguments),this.type="wmts-3d"}initialize(){this._getCompatibleTileInfoMatrixSet(t=>this._getTileInfoSupportError(t.tileInfo,t.fullExtent));let e=d(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>{let t=this._getCompatibleTileInfoMatrixSet(i=>this._getTileInfoError(i.tileInfo,i.fullExtent));t!=null&&(t.id!==null&&this.layer.activeLayer.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),t.tileInfo&&(this.tileInfo=t.tileInfo),this.layer.fullExtent=t.fullExtent)});this.addResolvingPromise(e),this.when(()=>this._postInitialize())}refresh(){this.emit("data-changed")}canResume(){if(!super.canResume())return!1;let e=this.layer.activeLayer.tileMatrixSet;return e!=null&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async fetchTile(e,t){return g(this,e,t)}async doRefresh(){this.suspended||this.emit("data-changed")}_postInitialize(){this._updatingHandles.add(()=>this.layer?.activeLayer?.styleId,()=>this.refresh()),this._updatingHandles.add(()=>this.layer?.activeLayer,e=>{let t=this._getCompatibleTileInfoMatrixSet(i=>this._getTileInfoError(i.tileInfo,i.fullExtent),!0);t&&t.id!=null&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()})}_getCompatibleTileInfoMatrixSet(e,t=!1){let i=f(this.layer);if(i!=null){if(m.isCollection(i))return i.find(I=>{let o=e(I);return o!=null&&(t?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",o):this.addResolvingPromise(Promise.reject(o))),o==null});let a=e(i);return a!=null&&(t?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",a):this.addResolvingPromise(Promise.reject(a))),i}return null}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};s([l()],r.prototype,"layer",void 0),s([l()],r.prototype,"suspended",void 0),s([l()],r.prototype,"tileInfo",void 0),r=s([h("esri.views.3d.layers.WMTSLayerView3D")],r);var V=r;export{V as default};
