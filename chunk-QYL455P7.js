import{a as A}from"./chunk-F7MBACHV.js";import{a as L}from"./chunk-5ZS2L6U3.js";import"./chunk-OC2XJJQU.js";import"./chunk-563WFO4F.js";import{m as _}from"./chunk-T4QAGZWF.js";import{a as c,b as T}from"./chunk-7BXTHPPE.js";import"./chunk-Q5KIWWVU.js";import"./chunk-KK722UJA.js";import{a as Y,b as I}from"./chunk-5PPUNODV.js";import"./chunk-C27Q2S3P.js";import"./chunk-ZFRNSCYG.js";import"./chunk-UWWX7VSW.js";import"./chunk-CFF33S4D.js";import"./chunk-2XYAAYOE.js";import"./chunk-NIYDRLW4.js";import"./chunk-CAXK5KYB.js";import"./chunk-3CCK7BDD.js";import"./chunk-LNYBTIG7.js";import{b as V}from"./chunk-OVJTX4VC.js";import"./chunk-AOQ57NDM.js";import"./chunk-VMECOA4F.js";import"./chunk-JPMGMA4B.js";import"./chunk-DJW5LMRG.js";import"./chunk-ALWV3RJ2.js";import"./chunk-DEH76MSI.js";import"./chunk-VTGWQ7AP.js";import"./chunk-TBA3OZMJ.js";import"./chunk-S4QV2MGO.js";import"./chunk-USMAJP2P.js";import"./chunk-PHNFWHVF.js";import"./chunk-4N5OXIEM.js";import"./chunk-W26XKMAT.js";import"./chunk-NQWYPF77.js";import{d as X}from"./chunk-TOH4K6HW.js";import"./chunk-UP6FLASM.js";import"./chunk-DGBDFGKO.js";import"./chunk-44S2QQS2.js";import"./chunk-JTDXB5TK.js";import"./chunk-CWUY5SXW.js";import{e as b,h as F}from"./chunk-TPFJWNIU.js";import"./chunk-P25RU3X5.js";import"./chunk-XRRQM4E2.js";import"./chunk-GWBRHLNH.js";import"./chunk-EM35R6FY.js";import"./chunk-QXXXCEV5.js";import{B as U}from"./chunk-6B5XFA6F.js";import"./chunk-NHEQ4TAR.js";import"./chunk-AFC2H4Q3.js";import"./chunk-ZTOZWLEE.js";import"./chunk-NRBJLISB.js";import"./chunk-PTZYZULI.js";import"./chunk-NMLYCCKN.js";import"./chunk-RSDQHAJX.js";import"./chunk-BOVYXYHK.js";import"./chunk-FENRIY2T.js";import"./chunk-JGEVVXD4.js";import"./chunk-B3FO6PT7.js";import"./chunk-C4UMJHQC.js";import"./chunk-BCREO4Q5.js";import"./chunk-LXFQWIWE.js";import{h as C}from"./chunk-QT6UNBJP.js";import"./chunk-MWSXMSWY.js";import"./chunk-JRCKELO6.js";import"./chunk-KJULKTB5.js";import"./chunk-LACL4BQ2.js";import"./chunk-YR2HD3ZC.js";import"./chunk-GJASVPF6.js";import"./chunk-UBFCO3DV.js";import"./chunk-NI7FJV5X.js";import"./chunk-BUSG3ZOF.js";import"./chunk-XZIOXVVJ.js";import"./chunk-LFH24RLM.js";import"./chunk-Z5Q7KLA4.js";import"./chunk-X4LNX4BR.js";import"./chunk-4XZ6X7MQ.js";import"./chunk-WLHY3MMA.js";import{Q as W}from"./chunk-KGVXGH6H.js";import"./chunk-ARRCN5K3.js";import"./chunk-FTDD7QBB.js";import"./chunk-DB3UIQCU.js";import"./chunk-SBHKMV3P.js";import"./chunk-R4A63S45.js";import"./chunk-ETE32IYO.js";import"./chunk-ONUGDWDK.js";import"./chunk-SG7CQU4O.js";import{H as a,J as O}from"./chunk-QHVIRF5H.js";import{I as D}from"./chunk-WZDN6K3C.js";import{a as o}from"./chunk-QGVBCWUY.js";import"./chunk-OJQ73TPF.js";import"./chunk-354SCPDU.js";import"./chunk-OVHPPCBL.js";import"./chunk-IYZFKXJ6.js";import"./chunk-CKJ56T2Q.js";import"./chunk-SNFOAZZQ.js";import"./chunk-F6JAWRPN.js";import{r as z}from"./chunk-UHRSAPGQ.js";import"./chunk-V76GWARL.js";import"./chunk-N2WTMF3X.js";var s=class extends O{constructor(e){super(e),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){return this.grid?.rotateWithMap?0:C(this.view.rotation??0)}get gridRotation(){return C(this.grid?.rotation??0)}get gridCenter(){let{spatialReference:e,grid:r}=this;if(!r||!e||!b(r.center.spatialReference,e))return null;try{let t=F(r.center,e),i=e.isWrappable&&this.view?.center!=null?X(t.x,this.view.center.x,e):t.x;return c(i,t.y,t.z)}catch(t){return z.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",t),null}}get offsetScaleFactor(){let{pixelsPerStride:e,grid:r}=this;if(!r||!e)return 1;let{majorLineInterval:t,dynamicScaling:i}=r;return t<1?null:Y(t,e,i)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){let{grid:e}=this;return e?W(e.spacing,e.units,"meters"):null}get viewMetersPerPixel(){let{viewMetersPerSRUnit:e}=this;return e==null?null:e*V(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){let{spatialReference:e}=this.view;return this.gridCenter?I(this.gridCenter[0],this.gridCenter[1],e):null}get pixelsPerStride(){let{gridMetersPerStride:e,viewMetersPerPixel:r}=this;return r&&e?e/r:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(e,r,t){let{options:i,view:n}=this;if(!i?.effectiveGridEnabled||!n.grid||t.feature?.attributes&&_ in t.feature.attributes)return[];let l=t.coordinateHelper.arrayToPoint(e),p=i.distance*(t.pointer==="touch"?i.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(l,p)}fetchCandidatesSync(e,r){let t=[],{grid:i,effectiveViewRotation:n,gridRotation:l,gridCenter:p,viewMetersPerPixel:m,viewMetersPerSRUnit:f,offsetScaleFactor:S,spatialReference:g,gridMetersPerStride:E,pixelsPerStride:G}=this;if(!(i&&m&&f&&p&&g&&S&&E&&G)||!i.dynamicScaling&&G<5||!b(e.spatialReference,g))return t;let P=F(e,g),k=c(P.x,P.y,P.z),u=h(k,-l,p,-n),w=E/f*S,d=J(u,w,p),{shouldSnapX:v,shouldSnapY:y}=K(d,u,r,m,f);if(!v&&!y)return[];let q=c((v?d:u)[0],(y?d:u)[1]),R=h(q,l,p,n),j=h(d,l,p,n);if(y){let M=H(d,u,w,"y"),x=h(M,l,p,n);t.push(new L({lineStart:j,lineEnd:x,targetPoint:R,isDraped:!1}))}if(v){let M=H(d,u,w,"x"),x=h(M,l,p,n);t.push(new L({lineStart:j,lineEnd:x,targetPoint:R,isDraped:!1}))}return v&&y&&t.push(new A(R,t[0],t[1],!1)),t}};o([a({constructOnly:!0})],s.prototype,"view",void 0),o([a()],s.prototype,"options",void 0),o([a()],s.prototype,"grid",null),o([a()],s.prototype,"effectiveViewRotation",null),o([a()],s.prototype,"gridRotation",null),o([a()],s.prototype,"gridCenter",null),o([a()],s.prototype,"offsetScaleFactor",null),o([a()],s.prototype,"spatialReference",null),o([a()],s.prototype,"gridMetersPerStride",null),o([a()],s.prototype,"viewMetersPerPixel",null),o([a()],s.prototype,"viewMetersPerSRUnit",null),o([a()],s.prototype,"pixelsPerStride",null),o([a()],s.prototype,"updating",null),s=o([D("esri.views.interactive.snapping.GridSnappingEngine")],s);var h=(e,r,t,i)=>{let n=T(e[0],e[1],e[2]);return U(n,U(n,n,t,r),t,i)},J=(e,r,t)=>{let i=(e[0]-t[0])/r,n=(e[1]-t[1])/r,l=Math.trunc(i),p=Math.trunc(n),m=Math.round(i%1),f=Math.round(n%1),S=t[0]+(l+m)*r,g=t[1]+(p+f)*r;return c(S,g)},K=(e,r,t,i,n)=>{if(i<=0)return{shouldSnapX:!1,shouldSnapY:!1};let l=(e[0]-r[0])/i,p=(e[1]-r[1])/i;return{shouldSnapX:Math.abs(l*n)<t,shouldSnapY:Math.abs(p*n)<t}},H=(e,r,t,i)=>{if(i==="y"){let l=r[0]>e[0]?1:-1;return c(e[0]+t*l,e[1])}let n=r[1]>e[1]?1:-1;return c(e[0],e[1]+t*n)};export{s as GridSnappingEngine};
