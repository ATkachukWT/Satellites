import{e as L,f as U}from"./chunk-ZPQDV27Y.js";import{h as G}from"./chunk-SIMI7FRM.js";import{r as f,s as R}from"./chunk-YQGS4EZO.js";import{a as k}from"./chunk-3REMXE4W.js";import{b as O}from"./chunk-TOH4K6HW.js";import{I as j}from"./chunk-HP4LYRR4.js";import{b as v}from"./chunk-SLAWDKDA.js";import{c as I}from"./chunk-YR2HD3ZC.js";import{m as E,p as $,r as m,u as S}from"./chunk-KGVXGH6H.js";import{D as A}from"./chunk-ONUGDWDK.js";import{P as F}from"./chunk-CKJ56T2Q.js";import{b,r as w,t as n}from"./chunk-UHRSAPGQ.js";import{a as g}from"./chunk-N2WTMF3X.js";function M(e){return e?.applyEdits!=null}function z(e){return typeof e=="object"&&e!=null&&"objectId"in e&&!!e.objectId}function ce(e){return e.every(z)}function D(e){return typeof e=="object"&&e!=null&&"globalId"in e&&!!e.globalId}function he(e){return e.every(D)}async function me(e,t,r,a={}){let i,d="gdbVersion"in e?e.gdbVersion:null,p=a.gdbVersion??d;if(U(e)&&e.url)i=L(e.url,e.layerId,p,a.returnServiceEditsOption==="original-and-current-features");else{i=F(),i.promise.then(o=>{(o.addedFeatures.length||o.updatedFeatures.length||o.deletedFeatures.length||o.addedAttachments.length||o.updatedAttachments.length||o.deletedAttachments.length)&&e.emit("edits",o)});let s={result:i.promise};e.emit("apply-edits",s)}try{let{results:s,edits:o}=await C(e,t,r,a),u=l=>l.filter(h=>!h.error).map(b),c={edits:o,addedFeatures:u(s.addFeatureResults),updatedFeatures:u(s.updateFeatureResults),deletedFeatures:u(s.deleteFeatureResults),addedAttachments:u(s.addAttachmentResults),updatedAttachments:u(s.updateAttachmentResults),deletedAttachments:u(s.deleteAttachmentResults),exceededTransferLimit:!1,historicMoment:s.editMoment?new Date(s.editMoment):null,globalIdToObjectId:a.globalIdToObjectId};return s.editedFeatureResults?.length&&(c.editedFeatures=s.editedFeatureResults),i.resolve(c),s}catch(s){throw i.reject(s),s}}async function C(e,t,r,a){if(await e.load(),!M(t))throw new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!R(e))throw new n(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});let{edits:i,options:d}=await q(e,r,a);return i.addFeatures?.length||i.updateFeatures?.length||i.deleteFeatures?.length||i.addAttachments?.length||i.updateAttachments?.length||i.deleteAttachments?.length?{edits:i,results:await t.applyEdits(i,d)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function q(e,t,r){let a=f(e),i=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),d=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),p=e.infoFor3D!=null;if(K(t,a,r,!!i,!!d,`${e.type}-layer`),!a.data.isVersioned&&r?.gdbVersion)throw new n(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!a.editing.supportsRollbackOnFailure&&r?.rollbackOnFailureEnabled)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");let s=g({},r);if(s.rollbackOnFailureEnabled!=null||a.editing.supportsRollbackOnFailure||(s.rollbackOnFailureEnabled=!0),s.rollbackOnFailureEnabled||s.returnServiceEditsOption!=="original-and-current-features"||(s.rollbackOnFailureEnabled===!1&&w.getLogger("esri.layers.graphics.editingSupport").warn(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwritten and set to true."),s.rollbackOnFailureEnabled=!0),!a.editing.supportsReturnServiceEditsInSourceSpatialReference&&s.returnServiceEditsInSourceSR)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(s.returnServiceEditsInSourceSR&&s.returnServiceEditsOption!=="original-and-current-features")throw new n(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");let o=J(t,a,`${e.type}-layer`),u=r?.globalIdUsed||p,c=e.fields.filter(l=>l.type==="big-integer"||l.type==="oid"&&(l.length||0)>=8);if(u){let{globalIdField:l}=e;if(l==null)throw new n(`${e.type}-layer:invalid-parameter`,"Layer does not specify a global id field.");o.addFeatures.forEach(h=>_(h,l))}return o.addFeatures.forEach(l=>x(l,e,u,c)),o.updateFeatures.forEach(l=>Z(l,e,u,c)),o.deleteFeatures.forEach(l=>N(l,e,u,c)),o.addAttachments.forEach(l=>B(l,e)),o.updateAttachments.forEach(l=>B(l,e)),p&&await P(o,e),{edits:await X(o),options:s}}function y(e,t,r,a){if(r){if("attributes"in e&&!e.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,`Feature should have '${t.globalIdField}' when 'globalIdUsed' is true`);if(!("attributes"in e)&&!e.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"`'globalId' of the feature should be passed when 'globalIdUsed' is true")}if(a.length&&"attributes"in e)for(let i of a){let d=e.attributes[i.name];if(d!==void 0&&!j(i,d))throw new n(`${t.type}-layer:invalid-parameter`,`Big-integer field '${i.name}' of the feature must be less than ${Number.MAX_SAFE_INTEGER}`,{feature:e})}if("geometry"in e&&e.geometry!=null){if(e.geometry.hasZ&&t.capabilities?.data.supportsZ===!1)throw new n(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&t.capabilities?.data.supportsM===!1)throw new n(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function W(e,t){if("geometry"in e&&e.geometry?.type==="mesh"&&t.infoFor3D!=null&&t.spatialReference!=null){let{geometry:r}=e,{spatialReference:a,vertexSpace:i}=r,d=t.spatialReference,p=i.type==="local",s=$(d),o=E(d,a),u=o||m(d)&&(m(a)||S(a));if(!(p&&s&&u||!p&&!s&&o))throw new n(`${t.type}-layer:mesh-unsupported`,`Uploading a mesh with a ${i.type} vertex space and a spatial reference wkid:${a.wkid} to a layer with a spatial reference wkid:${d.wkid} is not supported.`)}}function x(e,t,r,a){y(e,t,r,a),W(e,t)}function N(e,t,r,a){y(e,t,r,a)}function Z(e,t,r,a){y(e,t,r,a),W(e,t);let i=f(t);if("geometry"in e&&e.geometry!=null&&!i?.editing.supportsGeometryUpdate)throw new n(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function B(e,t){let{feature:r,attachment:a}=e;if(!r||"attributes"in r&&!r.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in r)&&!r.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!a.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!a.data&&!a.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(a.data instanceof File&&a.data.name)&&!a.name)throw new n(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities?.editing.supportsUploadWithItemId&&a.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if(typeof a.data=="string"){let i=A(a.data);if(i&&!i.isBase64)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function _(e,t){let{attributes:r}=e;r[t]==null&&(r[t]=v())}async function X(e){let t=e.addFeatures??[],r=e.updateFeatures??[],a=t.concat(r).map(s=>s.geometry),i=await O(a),d=t.length,p=r.length;return i.slice(0,d).forEach((s,o)=>t[o].geometry=s),i.slice(d,d+p).forEach((s,o)=>r[o].geometry=s),e}function H(e){return{addFeatures:Array.from(e?.addFeatures??[]),updateFeatures:Array.from(e?.updateFeatures??[]),deleteFeatures:e&&I.isCollection(e.deleteFeatures)?e.deleteFeatures.toArray():e.deleteFeatures||[],addAttachments:e.addAttachments||[],updateAttachments:e.updateAttachments||[],deleteAttachments:e.deleteAttachments||[]}}function J(e,t,r){let a=H(e);if(a.addFeatures?.length&&!t.operations.supportsAdd)throw new n(`${r}:unsupported-operation`,"Layer does not support adding features.");if(a.updateFeatures?.length&&!t.operations.supportsUpdate)throw new n(`${r}:unsupported-operation`,"Layer does not support updating features.");if(a.deleteFeatures?.length&&!t.operations.supportsDelete)throw new n(`${r}:unsupported-operation`,"Layer does not support deleting features.");return a.addFeatures=a.addFeatures.map(T),a.updateFeatures=a.updateFeatures.map(T),a.addAssetFeatures=[],a}function K(e,t,r,a,i,d){if(!e||!a&&!i)throw new n(`${d}:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!t.editing.supportsGlobalId&&r?.globalIdUsed&&!r.usingFeatureServiceEndpoint)throw new n(`${d}:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!t.editing.supportsGlobalId&&i)throw new n(`${d}:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!r?.globalIdUsed&&i)throw new n(`${d}:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true")}function T(e){let t=new k;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function P(e,t){let{infoFor3D:r}=t;if(r==null)return;if(!G(r))throw new n(`${t.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");e.addAssetFeatures??=[];let{addAssetFeatures:a}=e;for(let i of e.addFeatures??[])V(i)&&a.push(i);for(let i of e.updateFeatures??[])V(i)&&a.push(i)}function V(e){return e?.geometry?.type==="mesh"}function fe(e,t,r,a){if(!M(t))throw new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!t.uploadAssets)throw new n(`${e.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:e});return t.uploadAssets(r,a)}export{z as a,ce as b,D as c,he as d,me as e,X as f,H as g,J as h,K as i,T as j,fe as k};
