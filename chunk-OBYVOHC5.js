import{a as p}from"./chunk-5RAXVJQI.js";import{c as g}from"./chunk-EXJYW3PC.js";import{E as f,d as S,s as d}from"./chunk-ETE32IYO.js";import{y as u}from"./chunk-CKJ56T2Q.js";import{t as c}from"./chunk-UHRSAPGQ.js";import{a as l,b as m}from"./chunk-N2WTMF3X.js";async function C(r,n){let t=d(r);if(!t)throw new c("invalid-url","Invalid scene service url");let e=m(l({},n),{sceneServerUrl:t.url.path,layerId:t.sublayer??void 0});if(e.sceneLayerItem??=await T(e),e.sceneLayerItem==null)return I(e.sceneServerUrl.replace("/SceneServer","/FeatureServer"),e);let a=await E(e);if(!a?.url)throw new c("related-service-not-found","Could not find feature service through portal item relationship");e.featureServiceItem=a;let s=await I(a.url,e);return s.portalItem=a,s}async function T(r){let n=(await U(r)).serviceItemId;if(!n)return null;let t=new p({id:n,apiKey:r.apiKey}),e=await q(r);e!=null&&(t.portal=new g({url:e}));try{return await t.load({signal:r.signal})}catch(a){return u(a),null}}async function U(r){if(r.rootDocument)return r.rootDocument;let n={query:m(l({f:"json"},r.customParameters),{token:r.apiKey}),responseType:"json",signal:r.signal};try{let t=await f(r.sceneServerUrl,n);r.rootDocument=t.data}catch{r.rootDocument={}}return r.rootDocument}async function q(r){let n=S?.findServerInfo(r.sceneServerUrl);if(n?.owningSystemUrl)return n.owningSystemUrl;let t=r.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{let e=(await f(t,{query:{f:"json"},responseType:"json",signal:r.signal})).data.owningSystemUrl;if(e)return e}catch(e){u(e)}return null}async function I(r,n){let t=d(r);if(!t)throw new c("invalid-feature-service-url","Invalid feature service url");let e=t.url.path,a=n.layerId;if(a==null)return{serverUrl:e};let s=U(n),v=n.featureServiceItem?await n.featureServiceItem.fetchData("json"):null,j=(v?.layers?.[0]||v?.tables?.[0])?.customParameters,w=o=>{let b={query:l({f:"json"},j),responseType:"json",authMode:o,signal:n.signal};return f(e,b)},A=w("anonymous").catch(()=>w("no-prompt")),[h,D]=await Promise.all([A,s]),y=D?.layers,i=h.data&&h.data.layers;if(!Array.isArray(i))throw new Error("expected layers array");if(Array.isArray(y)){for(let o=0;o<Math.min(y.length,i.length);o++)if(y[o].id===a)return{serverUrl:e,layerId:i[o].id}}else if(a!=null&&a<i.length)return{serverUrl:e,layerId:i[a].id};throw new Error("could not find matching associated sublayer")}async function E({sceneLayerItem:r,signal:n}){if(!r)return null;try{let t=(await r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:n})).find(a=>a.type==="Feature Service")||null;if(!t)return null;let e=new p({portal:t.portal,id:t.id});return await e.load(),e}catch(t){return u(t),null}}export{C as a};
