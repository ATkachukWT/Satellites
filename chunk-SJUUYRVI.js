import{a as d}from"./chunk-3REMXE4W.js";import{l as T,o as A,p as j,s as k,w as D}from"./chunk-I4Q2S2XA.js";import{f as O}from"./chunk-BSMAMABT.js";import{b as x}from"./chunk-LYNAYPL3.js";import{a as p}from"./chunk-KAMRW6HF.js";import{f as g}from"./chunk-QT6UNBJP.js";import{c as P}from"./chunk-YR2HD3ZC.js";import{H as h,J as M}from"./chunk-QHVIRF5H.js";import{I as z}from"./chunk-WZDN6K3C.js";import{a as i}from"./chunk-QGVBCWUY.js";var J=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]],n=class extends M{constructor(t){super(t),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=J.map(t=>new x({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(t){this._enabled!==t&&(this._enabled=t,this.update())}update(){if(!this._enabled)return void this.clear();let t=e=>{if(e.label!=null)return e.label;let s=e.lij.toString();return e.loadPriority!=null&&(s+=` (${e.loadPriority})`),e.measures&&(s+=`[${e.measures.lodLevel}]`),s},m=this.getTiles(),y=new Array,u=new Set((this._labels.size,this._labels.keys()));m.forEach((e,s)=>{let o=e.lij.toString();u.delete(o);let E=e.measures?.lodLevel??e.level,w=e.geometry;if(this.enablePolygons&&!this._polygons.has(o)){let l=new d({geometry:w,symbol:this._symbols[E%this._symbols.length]});this._polygons.set(o,l),y.push(l)}if(this.enableLabels){let l=t(e),f=s/(m.length-1),c=g(0,200,f),_=g(20,6,f)/.75,v=e.loadPriority!=null&&e.loadPriority>=m.length,L=new p([c,v?0:c,v?0:c]),S=this.view.type==="3d"?()=>new D({verticalOffset:new k({screenLength:40/.75}),callout:new j({color:new p("white"),border:new A({color:new p("black")})}),symbolLayers:new P([new T({text:l,halo:{color:"white",size:1/.75},material:{color:L},size:_})])}):()=>new O({text:l,haloColor:"white",haloSize:1/.75,color:L,size:_}),a=this._labels.get(o);if(a){let r=S();a.symbol!=null&&JSON.stringify(r)===JSON.stringify(a.symbol)||(a.symbol=r)}else{let r=new d({geometry:w.extent.center,symbol:S()});this._labels.set(o,r),y.push(r)}}});let b=new Array;u.forEach(e=>{let s=this._polygons.get(e);s!=null&&(b.push(s),this._polygons.delete(e));let o=this._labels.get(e);o!=null&&(b.push(o),this._labels.delete(e))}),this.view.graphics.removeMany(b),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};i([h({constructOnly:!0})],n.prototype,"view",void 0),i([h({readOnly:!0})],n.prototype,"updating",void 0),i([h()],n.prototype,"enabled",null),n=i([z("esri.views.support.TileTreeDebugger")],n);export{n as a};
