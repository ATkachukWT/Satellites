import{a as q}from"./chunk-ZGGQ3WAU.js";import{a as F,b as J}from"./chunk-QO4VV4M2.js";import{a as I}from"./chunk-FQTXYWH5.js";import{b as C}from"./chunk-GWZ4F32U.js";import{b as x}from"./chunk-UO5Q6C3A.js";import{a as V}from"./chunk-KBDKZSTB.js";import{e as z,l as M}from"./chunk-SVJ5AK5B.js";import{a as P}from"./chunk-5RAXVJQI.js";import{c as $}from"./chunk-EXJYW3PC.js";import{m as g}from"./chunk-LFH24RLM.js";import{a as h}from"./chunk-X4LNX4BR.js";import{a as S}from"./chunk-4XZ6X7MQ.js";import{a as K}from"./chunk-WLHY3MMA.js";import{E as v,s as R,u as T,v as O,y as j,z as U}from"./chunk-ETE32IYO.js";import{h as L}from"./chunk-ONUGDWDK.js";import{H as p}from"./chunk-QHVIRF5H.js";import{I as E}from"./chunk-WZDN6K3C.js";import{a as s}from"./chunk-QGVBCWUY.js";import{O as A}from"./chunk-CKJ56T2Q.js";import{r as f,t as d}from"./chunk-UHRSAPGQ.js";import{a as c,b as m}from"./chunk-N2WTMF3X.js";var G=null;function W(){return G}var be=a=>{let o=class extends a{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=A(async(r,e,i)=>{switch(r){case w.SAVE:return this._save(e);case w.SAVE_AS:return this._saveAs(i,e)}})}readSpatialReference(r,e){return _(e)}readFullExtent(r,e,i){if(r!=null&&typeof r=="object"){let l=r.spatialReference==null?m(c({},r),{spatialReference:_(e)}):r;return g.fromJSON(l,i)}let t=e.store,n=_(e);return n==null||t?.extent==null||!Array.isArray(t.extent)||t.extent.some(l=>l<b)?null:new g({xmin:t.extent[0],ymin:t.extent[1],xmax:t.extent[2],ymax:t.extent[3],spatialReference:n})}parseVersionString(r){let e={major:Number.NaN,minor:Number.NaN,versionString:r},i=r.split(".");return i.length>=2&&(e.major=parseInt(i[0],10),e.minor=parseInt(i[1],10)),e}readVersion(r,e){let i=e.store,t=i.version!=null?i.version.toString():"";return this.parseVersionString(t)}readTitlePortalItem(r){return this.sublayerTitleMode!=="item-title"?void 0:r}readTitleService(r,e){let i=this.portalItem?.title;if(this.sublayerTitleMode==="item-title")return this.url?O(this.url,e.name):e.name;let t=e.name;if(!t&&this.url){let n=R(this.url);n!=null&&(t=n.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(t=i+" - "+t),T(t)}set url(r){if(r==null)return void this._set("url",r);let e=j({layer:this,url:r,nonStandardUrlAllowed:!1,logger:f.getLogger(this)});this._set("url",e.url),e.layerId!=null&&this._set("layerId",e.layerId)}writeUrl(r,e,i,t){U(this,r,"layers",e,t)}get parsedUrl(){let r=this._get("url"),e=L(r);return e&&this.layerId!=null&&(e.path=`${e.path}/layers/${this.layerId}`),e}async _fetchIndexAndUpdateExtent(r,e){this.indexInfo=q(this.parsedUrl?.path??"",this.rootNode,r,this.customParameters,this.apiKey,f.getLogger(this),e),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(r){if(r?.type==="page"){let e=r.rootIndex%r.pageSize,i=r.rootPage?.nodes?.[e];if(i?.obb?.center==null||i.obb.halfSize==null)throw new d("sceneservice:invalid-node-page","Invalid node page.");if(i.obb.center[0]<b||this.fullExtent==null||this.fullExtent.hasZ)return;let t=i.obb.halfSize,n=i.obb.center[2],l=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);this.fullExtent.zmin=n-l,this.fullExtent.zmax=n+l}else if(r?.type==="node"){let e=r.rootNode?.mbs;if(!Array.isArray(e)||e.length!==4||e[0]<b)return;let i=e[2],t=e[3],{fullExtent:n}=this;n&&(n.zmin=i-t,n.zmax=i+t)}}async _fetchService(r){if(this.url==null)throw new d("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){let e=await this._fetchFirstLayerId(r);e!=null&&(this.layerId=e)}return this._fetchServiceLayer(r)}async _fetchFirstLayerId(r){let e=await v(this.url??"",{query:m(c({f:"json"},this.customParameters),{token:this.apiKey}),responseType:"json",signal:r});if(e.data&&Array.isArray(e.data.layers)&&e.data.layers.length>0)return e.data.layers[0].id}async _fetchServiceLayer(r){let e=await v(this.parsedUrl?.path??"",{query:m(c({f:"json"},this.customParameters),{token:this.apiKey}),responseType:"json",signal:r});e.ssl&&this.url&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(e.data.layerType&&e.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();let t=e.data;this.read(t,this._getServiceContext()),this.validateLayer(t)}async _fetchVoxelServiceLayer(r){let e=(await v(this.parsedUrl?.path+"/layer",{query:m(c({f:"json"},this.customParameters),{token:this.apiKey}),responseType:"json",signal:r})).data;this.read(e,this._getServiceContext()),this.validateLayer(e)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(r){}async _saveAs(r,e){let i=c(c({},B),e),t=P.from(r);if(!t)throw new d("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");t.id&&(t=t.clone(),t.id=null);let n=t.portal||$.getDefault();await this._ensureLoadBeforeSave(),t.type=N,t.portal=n;let l=x(t,"portal-item",!0),u={layers:[this.write({},l)]};return await Promise.all(l.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(u,l,i),this.url&&(t.url=this.url),t.title||(t.title=this.title),k(t,i,y.newItem),await n.signIn(),await n.user.addItem({item:t,folder:i?.folder,data:u}),await F(this.resourceReferences,l),this.portalItem=t,I(l),l.portalItem=t,t}async _save(r){let e=c(c({},B),r);if(!this.portalItem)throw new d("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==N)throw new d("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${N}"`);await this._ensureLoadBeforeSave();let i=x(this.portalItem,"portal-item",!0),t={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(t,i,e),this.url&&(this.portalItem.url=this.url),this.portalItem.title||(this.portalItem.title=this.title),k(this.portalItem,e,y.existingItem),await J(this.portalItem,t,this.resourceReferences,i),I(i),this.portalItem}async _validateAgainstJSONSchema(r,e,i){let t=i?.validationOptions;C(e,{errorName:"sceneservice:save"},{ignoreUnsupported:t?.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]});let n=t?.enabled,l=W();if(n&&l){let u=(await l()).validate(r,i.portalItemLayerType);if(!u.length)return;let D=`Layer item did not validate:
${u.join(`
`)}`;if(f.getLogger(this).error(`_validateAgainstJSONSchema(): ${D}`),t.failPolicy==="throw"){let Z=u.map(H=>new d("sceneservice:schema-validation",H));throw new d("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{validationErrors:Z})}}}};return s([p(M)],o.prototype,"id",void 0),s([p({type:S})],o.prototype,"spatialReference",void 0),s([h("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],o.prototype,"readSpatialReference",null),s([p({type:g})],o.prototype,"fullExtent",void 0),s([h("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],o.prototype,"readFullExtent",null),s([p({readOnly:!0,type:V})],o.prototype,"heightModelInfo",void 0),s([p({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],o.prototype,"minScale",void 0),s([p({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],o.prototype,"maxScale",void 0),s([p({readOnly:!0})],o.prototype,"version",void 0),s([h("version",["store.version"])],o.prototype,"readVersion",null),s([p({type:String,json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),s([p({type:String,json:{read:!1}})],o.prototype,"sublayerTitleMode",void 0),s([p({type:String})],o.prototype,"title",void 0),s([h("portal-item","title")],o.prototype,"readTitlePortalItem",null),s([h("service","title",["name"])],o.prototype,"readTitleService",null),s([p({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],o.prototype,"layerId",void 0),s([p(z)],o.prototype,"url",null),s([K("url")],o.prototype,"writeUrl",null),s([p()],o.prototype,"parsedUrl",null),s([p({readOnly:!0})],o.prototype,"store",void 0),s([p({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],o.prototype,"rootNode",void 0),o=s([E("esri.layers.mixins.SceneService")],o),o},b=-1e38;function _(a){if(a.spatialReference!=null)return S.fromJSON(a.spatialReference);let o=a.store,r=o.indexCRS||o.geographicCRS,e=r&&parseInt(r.slice(r.lastIndexOf("/")+1),10);return e!=null?new S(e):null}function k(a,o,r){a.typeKeywords||(a.typeKeywords=[]);let e=o.getTypeKeywords();for(let i of e)a.typeKeywords.push(i);a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter((i,t,n)=>n.indexOf(i)===t),r===y.newItem&&(a.typeKeywords=a.typeKeywords.filter(i=>i!=="Hosted Service")))}var y;(function(a){a[a.existingItem=0]="existingItem",a[a.newItem=1]="newItem"})(y||(y={}));var N="Scene Service",B={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}},w;(function(a){a[a.SAVE=0]="SAVE",a[a.SAVE_AS=1]="SAVE_AS"})(w||(w={}));export{be as a,w as b};
