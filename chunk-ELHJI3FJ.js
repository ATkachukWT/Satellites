import{a as E}from"./chunk-PSNQ2KG3.js";import{z as d}from"./chunk-HM5RIVQC.js";import{b as p}from"./chunk-R4A63S45.js";import"./chunk-ETE32IYO.js";import"./chunk-ONUGDWDK.js";import"./chunk-SG7CQU4O.js";import"./chunk-QHVIRF5H.js";import"./chunk-WZDN6K3C.js";import"./chunk-QGVBCWUY.js";import"./chunk-OJQ73TPF.js";import"./chunk-354SCPDU.js";import"./chunk-OVHPPCBL.js";import"./chunk-IYZFKXJ6.js";import"./chunk-CKJ56T2Q.js";import"./chunk-SNFOAZZQ.js";import"./chunk-F6JAWRPN.js";import"./chunk-UHRSAPGQ.js";import"./chunk-V76GWARL.js";import"./chunk-N2WTMF3X.js";function D(){return y??=(async()=>{let e=await import("./chunk-TNO4GR3E.js"),r=await e.default({locateFile:t=>p(`esri/libs/basisu/${t}`)});return r.initializeBasis(),r})(),y}var y;function _(){return S??=(async()=>await(await import("./chunk-3KIKJWAV.js")).default({locateFile:r=>p(`esri/libs/dxtEncoder/${r}`)}))(),S}var S;var x,X,c=null,w=null,m=class{constructor(r,t){this.internalFormat=r,this.compressedTexture=t}};async function Z(e){let r=G(e.data,e.flipped);if(e.hasS3TC){w||await B();let t=new Uint8Array(r.length);w?.encode(new Uint8Array(r),e.width,e.height,t);let n=H(t,!0),i=[t.buffer];return{result:new m(n?.internalFormat??null,n?.textureData??null),transferList:i}}if(e.hasETC){c||await R();let t=await b(r,e.width,e.height,e.hasMipmap),n=t?await F(t):null,i=n?.compressedTexture?.levels.map(l=>l.buffer)||[];return{result:new m(n?.internalFormat??null,n?.compressedTexture??null),transferList:i}}return{result:new m(null,null)}}async function R(){c||(c=await(x??=D()))}async function B(){w||(w=await(X??=_()))}async function b(e,r,t,n,i=255,l=0,s=!1,o=!1){if(!c)return null;let a=new c.BasisEncoder;a.setPerceptual(!o),a.setCheckForAlpha(!0),a.setForceAlpha(!1),a.setRenormalize(o),a.setMipGen(n),a.setMipSRGB(!o),a.setCreateKTX2File(!0),a.setKTX2SRGBTransferFunc(!o),a.setQualityLevel(i),a.setCompressionLevel(l);let h=new Uint8Array(e.byteLength);a.setSliceSourceImage(0,new Uint8Array(e),r,t,s);let T=a.encode(h),u=new Uint8Array(h.buffer,0,T),f=new c.KTX2File(new Uint8Array(u));return f.isValid()?(a.delete(),u):(f.close(),f.delete(),a.delete(),null)}async function F(e){if(!c)return new m(null,null);let r=new c.KTX2File(new Uint8Array(e));r.startTranscoding();let[t,n]=r.getHasAlpha()?[E.ETC2_RGBA,d.COMPRESSED_RGBA8_ETC2_EAC]:[E.ETC1_RGB,d.COMPRESSED_RGB8_ETC2],i=r.getLevels(),l=[];for(let s=0;s<i;s++)l.push(new Uint8Array(r.getImageTranscodedSizeInBytes(s,0,0,t))),r.transcodeImage(l[s],s,0,0,t,0,-1,-1);return r.close(),r.delete(),{internalFormat:n,compressedTexture:{type:"compressed",levels:l}}}function G(e,r=!1){let t=new OffscreenCanvas(e.width,e.height),n=t.getContext("2d");return r&&n.scale(1,-1),n.drawImage(e,0,r?-e.height:0),n.getImageData(0,0,t.width,t.height).data}var M=31,U=1,O=2,v=3,I=4,K=7,L=21,P=131072;function C(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var k=C("DXT1"),z=C("DXT3"),$=C("DXT5");function H(e,r){let t=new Int32Array(e.buffer,e.byteOffset,M),n,i;switch(t[L]){case k:n=8,i=d.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case z:n=16,i=d.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case $:n=16,i=d.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,s=t[I],o=t[v];(3&s||3&o)&&(s=s+3&-4,o=o+3&-4);let a=s,h=o,T,u;t[O]&P&&r!==!1&&(l=Math.max(1,t[K]));let f=e.byteOffset+t[U]+4,g=[];for(let A=0;A<l;++A)u=(s+3>>2)*(o+3>>2)*n,T=new Uint8Array(e.buffer,f,u),g.push(T),f+=u,s=Math.max(1,s>>1),o=Math.max(1,o>>1);return{textureData:{type:"compressed",levels:g},internalFormat:i,width:a,height:h}}export{m as TextureCompressionWorkerOutput,Z as compress,b as compressRGBADataToKTX2,F as createTextureDataKTX2,R as initializeBasisEncoder,B as initializeDXTEncoder};
